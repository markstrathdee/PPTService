#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PPTService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="cascade")]
	public partial class CascadeDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTableAdmin(TableAdmin instance);
    partial void UpdateTableAdmin(TableAdmin instance);
    partial void DeleteTableAdmin(TableAdmin instance);
    partial void InsertTableUser(TableUser instance);
    partial void UpdateTableUser(TableUser instance);
    partial void DeleteTableUser(TableUser instance);
    partial void InsertTableAsset(TableAsset instance);
    partial void UpdateTableAsset(TableAsset instance);
    partial void DeleteTableAsset(TableAsset instance);
    partial void InsertTableAssetTracking(TableAssetTracking instance);
    partial void UpdateTableAssetTracking(TableAssetTracking instance);
    partial void DeleteTableAssetTracking(TableAssetTracking instance);
    partial void InsertTableAssetType(TableAssetType instance);
    partial void UpdateTableAssetType(TableAssetType instance);
    partial void DeleteTableAssetType(TableAssetType instance);
    partial void InsertTableAttendanceStatus(TableAttendanceStatus instance);
    partial void UpdateTableAttendanceStatus(TableAttendanceStatus instance);
    partial void DeleteTableAttendanceStatus(TableAttendanceStatus instance);
    partial void InsertTableCDN(TableCDN instance);
    partial void UpdateTableCDN(TableCDN instance);
    partial void DeleteTableCDN(TableCDN instance);
    partial void InsertTableCustomer(TableCustomer instance);
    partial void UpdateTableCustomer(TableCustomer instance);
    partial void DeleteTableCustomer(TableCustomer instance);
    partial void InsertTableEncoderAsset(TableEncoderAsset instance);
    partial void UpdateTableEncoderAsset(TableEncoderAsset instance);
    partial void DeleteTableEncoderAsset(TableEncoderAsset instance);
    partial void InsertTableEvent(TableEvent instance);
    partial void UpdateTableEvent(TableEvent instance);
    partial void DeleteTableEvent(TableEvent instance);
    partial void InsertTableEventStatus(TableEventStatus instance);
    partial void UpdateTableEventStatus(TableEventStatus instance);
    partial void DeleteTableEventStatus(TableEventStatus instance);
    partial void InsertTableEventType(TableEventType instance);
    partial void UpdateTableEventType(TableEventType instance);
    partial void DeleteTableEventType(TableEventType instance);
    partial void InsertTableGroup(TableGroup instance);
    partial void UpdateTableGroup(TableGroup instance);
    partial void DeleteTableGroup(TableGroup instance);
    partial void InsertTableLiveStream(TableLiveStream instance);
    partial void UpdateTableLiveStream(TableLiveStream instance);
    partial void DeleteTableLiveStream(TableLiveStream instance);
    partial void InsertTablePoll(TablePoll instance);
    partial void UpdateTablePoll(TablePoll instance);
    partial void DeleteTablePoll(TablePoll instance);
    partial void InsertTablePortal(TablePortal instance);
    partial void UpdateTablePortal(TablePortal instance);
    partial void DeleteTablePortal(TablePortal instance);
    partial void InsertTableProfile(TableProfile instance);
    partial void UpdateTableProfile(TableProfile instance);
    partial void DeleteTableProfile(TableProfile instance);
    partial void InsertTableQuestion(TableQuestion instance);
    partial void UpdateTableQuestion(TableQuestion instance);
    partial void DeleteTableQuestion(TableQuestion instance);
    partial void InsertTableRole(TableRole instance);
    partial void UpdateTableRole(TableRole instance);
    partial void DeleteTableRole(TableRole instance);
    partial void InsertTableSkin(TableSkin instance);
    partial void UpdateTableSkin(TableSkin instance);
    partial void DeleteTableSkin(TableSkin instance);
    partial void InsertTableSyncEvent(TableSyncEvent instance);
    partial void UpdateTableSyncEvent(TableSyncEvent instance);
    partial void DeleteTableSyncEvent(TableSyncEvent instance);
    #endregion
		
		public CascadeDataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["cascadeConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CascadeDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CascadeDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CascadeDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CascadeDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TableAdmin> TableAdmins
		{
			get
			{
				return this.GetTable<TableAdmin>();
			}
		}
		
		public System.Data.Linq.Table<TableUser> TableUsers
		{
			get
			{
				return this.GetTable<TableUser>();
			}
		}
		
		public System.Data.Linq.Table<TableAsset> TableAssets
		{
			get
			{
				return this.GetTable<TableAsset>();
			}
		}
		
		public System.Data.Linq.Table<TableAssetTracking> TableAssetTrackings
		{
			get
			{
				return this.GetTable<TableAssetTracking>();
			}
		}
		
		public System.Data.Linq.Table<TableAssetType> TableAssetTypes
		{
			get
			{
				return this.GetTable<TableAssetType>();
			}
		}
		
		public System.Data.Linq.Table<TableAttendanceStatus> TableAttendanceStatus
		{
			get
			{
				return this.GetTable<TableAttendanceStatus>();
			}
		}
		
		public System.Data.Linq.Table<TableCDN> TableCDNs
		{
			get
			{
				return this.GetTable<TableCDN>();
			}
		}
		
		public System.Data.Linq.Table<TableCustomer> TableCustomers
		{
			get
			{
				return this.GetTable<TableCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TableEncoderAsset> TableEncoderAssets
		{
			get
			{
				return this.GetTable<TableEncoderAsset>();
			}
		}
		
		public System.Data.Linq.Table<TableEvent> TableEvents
		{
			get
			{
				return this.GetTable<TableEvent>();
			}
		}
		
		public System.Data.Linq.Table<TableEventStatus> TableEventStatus
		{
			get
			{
				return this.GetTable<TableEventStatus>();
			}
		}
		
		public System.Data.Linq.Table<TableEventType> TableEventTypes
		{
			get
			{
				return this.GetTable<TableEventType>();
			}
		}
		
		public System.Data.Linq.Table<TableGroup> TableGroups
		{
			get
			{
				return this.GetTable<TableGroup>();
			}
		}
		
		public System.Data.Linq.Table<TableLiveStream> TableLiveStreams
		{
			get
			{
				return this.GetTable<TableLiveStream>();
			}
		}
		
		public System.Data.Linq.Table<TablePoll> TablePolls
		{
			get
			{
				return this.GetTable<TablePoll>();
			}
		}
		
		public System.Data.Linq.Table<TablePortal> TablePortals
		{
			get
			{
				return this.GetTable<TablePortal>();
			}
		}
		
		public System.Data.Linq.Table<TableProfile> TableProfiles
		{
			get
			{
				return this.GetTable<TableProfile>();
			}
		}
		
		public System.Data.Linq.Table<TableQuestion> TableQuestions
		{
			get
			{
				return this.GetTable<TableQuestion>();
			}
		}
		
		public System.Data.Linq.Table<TableRole> TableRoles
		{
			get
			{
				return this.GetTable<TableRole>();
			}
		}
		
		public System.Data.Linq.Table<TableSkin> TableSkins
		{
			get
			{
				return this.GetTable<TableSkin>();
			}
		}
		
		public System.Data.Linq.Table<TableSyncEvent> TableSyncEvents
		{
			get
			{
				return this.GetTable<TableSyncEvent>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableAdmin")]
	public partial class TableAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminID;
		
		private string _AdminFName;
		
		private string _AdminEmail;
		
		private string _AdminLName;
		
		private string _AdminRole;
		
		private string _AdminPassword;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private string _UserName;
		
		private string _CustomerID;
		
		private string _EventID;
		
		private string _ModuleAccess;
		
		private string _PortalDomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(string value);
    partial void OnAdminIDChanged();
    partial void OnAdminFNameChanging(string value);
    partial void OnAdminFNameChanged();
    partial void OnAdminEmailChanging(string value);
    partial void OnAdminEmailChanged();
    partial void OnAdminLNameChanging(string value);
    partial void OnAdminLNameChanged();
    partial void OnAdminRoleChanging(string value);
    partial void OnAdminRoleChanged();
    partial void OnAdminPasswordChanging(string value);
    partial void OnAdminPasswordChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnModuleAccessChanging(string value);
    partial void OnModuleAccessChanged();
    partial void OnPortalDomainChanging(string value);
    partial void OnPortalDomainChanged();
    #endregion
		
		public TableAdmin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminFName", DbType="VarChar(50)")]
		public string AdminFName
		{
			get
			{
				return this._AdminFName;
			}
			set
			{
				if ((this._AdminFName != value))
				{
					this.OnAdminFNameChanging(value);
					this.SendPropertyChanging();
					this._AdminFName = value;
					this.SendPropertyChanged("AdminFName");
					this.OnAdminFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminEmail", DbType="VarChar(100)")]
		public string AdminEmail
		{
			get
			{
				return this._AdminEmail;
			}
			set
			{
				if ((this._AdminEmail != value))
				{
					this.OnAdminEmailChanging(value);
					this.SendPropertyChanging();
					this._AdminEmail = value;
					this.SendPropertyChanged("AdminEmail");
					this.OnAdminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminLName", DbType="VarChar(50)")]
		public string AdminLName
		{
			get
			{
				return this._AdminLName;
			}
			set
			{
				if ((this._AdminLName != value))
				{
					this.OnAdminLNameChanging(value);
					this.SendPropertyChanging();
					this._AdminLName = value;
					this.SendPropertyChanged("AdminLName");
					this.OnAdminLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminRole", DbType="VarChar(100)")]
		public string AdminRole
		{
			get
			{
				return this._AdminRole;
			}
			set
			{
				if ((this._AdminRole != value))
				{
					this.OnAdminRoleChanging(value);
					this.SendPropertyChanging();
					this._AdminRole = value;
					this.SendPropertyChanged("AdminRole");
					this.OnAdminRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPassword", DbType="VarChar(50)")]
		public string AdminPassword
		{
			get
			{
				return this._AdminPassword;
			}
			set
			{
				if ((this._AdminPassword != value))
				{
					this.OnAdminPasswordChanging(value);
					this.SendPropertyChanging();
					this._AdminPassword = value;
					this.SendPropertyChanged("AdminPassword");
					this.OnAdminPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="VarChar(50)")]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleAccess", DbType="VarChar(50)")]
		public string ModuleAccess
		{
			get
			{
				return this._ModuleAccess;
			}
			set
			{
				if ((this._ModuleAccess != value))
				{
					this.OnModuleAccessChanging(value);
					this.SendPropertyChanging();
					this._ModuleAccess = value;
					this.SendPropertyChanged("ModuleAccess");
					this.OnModuleAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDomain", DbType="VarChar(MAX)")]
		public string PortalDomain
		{
			get
			{
				return this._PortalDomain;
			}
			set
			{
				if ((this._PortalDomain != value))
				{
					this.OnPortalDomainChanging(value);
					this.SendPropertyChanging();
					this._PortalDomain = value;
					this.SendPropertyChanged("PortalDomain");
					this.OnPortalDomainChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableUsers")]
	public partial class TableUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _EventID;
		
		private string _UserID;
		
		private string _UserFName;
		
		private string _UserLName;
		
		private string _UserCompanyName;
		
		private string _UserEmail;
		
		private string _UserPhone;
		
		private string _UserTwitter;
		
		private string _UserFacebook;
		
		private string _UserLinkedIn;
		
		private string _UserEmailOptIn;
		
		private string _UserSocialOptIn;
		
		private string _UserAddressStreet1;
		
		private string _UserAddressStreet2;
		
		private string _UserAddressCity;
		
		private string _UserAddressZip;
		
		private string _UserAddressState;
		
		private string _UserAddressCountry;
		
		private string _UserTitle;
		
		private string _UserHandle;
		
		private string _UserDepartment;
		
		private string _UserCascadeProfile;
		
		private string _UserIntegrationKey;
		
		private System.Nullable<System.DateTime> _UserDateCreated;
		
		private string _SecurityRoleID;
		
		private string _SkinID;
		
		private string _BonusPoints;
		
		private string _ProfileID;
		
		private string _GroupID;
		
		private System.Nullable<System.DateTime> _UserDateModified;
		
		private string _UserQuestionsComments;
		
		private string _UserDepartmentRole;
		
		private string _UserAddressRegion;
		
		private string _UserAddressProvince;
		
		private System.Nullable<int> _AttendedStatus;
		
		private string _SpokenLanguage;
		
		private string _UsersortEvents;
		
		private string _UserLandingPage;
		
		private string _UserReferrerSource;
		
		private string _ResellerID;
		
		private string _UserBRIM;
		
		private System.Nullable<int> _EmailSendStatus;
		
		private string _AttendedLive;
		
		private string _AttendedVOD;
		
		private string _SalesRep;
		
		private string _PortalDomain;
		
		private EntitySet<TableAttendanceStatus> _TableAttendanceStatus;
		
		private EntitySet<TableGroup> _TableGroups;
		
		private EntityRef<TableProfile> _TableProfile;
		
		private EntityRef<TableRole> _TableRole;
		
		private EntityRef<TableSkin> _TableSkin;
		
		private EntityRef<TableSkin> _TableSkin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserFNameChanging(string value);
    partial void OnUserFNameChanged();
    partial void OnUserLNameChanging(string value);
    partial void OnUserLNameChanged();
    partial void OnUserCompanyNameChanging(string value);
    partial void OnUserCompanyNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPhoneChanging(string value);
    partial void OnUserPhoneChanged();
    partial void OnUserTwitterChanging(string value);
    partial void OnUserTwitterChanged();
    partial void OnUserFacebookChanging(string value);
    partial void OnUserFacebookChanged();
    partial void OnUserLinkedInChanging(string value);
    partial void OnUserLinkedInChanged();
    partial void OnUserEmailOptInChanging(string value);
    partial void OnUserEmailOptInChanged();
    partial void OnUserSocialOptInChanging(string value);
    partial void OnUserSocialOptInChanged();
    partial void OnUserAddressStreet1Changing(string value);
    partial void OnUserAddressStreet1Changed();
    partial void OnUserAddressStreet2Changing(string value);
    partial void OnUserAddressStreet2Changed();
    partial void OnUserAddressCityChanging(string value);
    partial void OnUserAddressCityChanged();
    partial void OnUserAddressZipChanging(string value);
    partial void OnUserAddressZipChanged();
    partial void OnUserAddressStateChanging(string value);
    partial void OnUserAddressStateChanged();
    partial void OnUserAddressCountryChanging(string value);
    partial void OnUserAddressCountryChanged();
    partial void OnUserTitleChanging(string value);
    partial void OnUserTitleChanged();
    partial void OnUserHandleChanging(string value);
    partial void OnUserHandleChanged();
    partial void OnUserDepartmentChanging(string value);
    partial void OnUserDepartmentChanged();
    partial void OnUserCascadeProfileChanging(string value);
    partial void OnUserCascadeProfileChanged();
    partial void OnUserIntegrationKeyChanging(string value);
    partial void OnUserIntegrationKeyChanged();
    partial void OnUserDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUserDateCreatedChanged();
    partial void OnSecurityRoleIDChanging(string value);
    partial void OnSecurityRoleIDChanged();
    partial void OnSkinIDChanging(string value);
    partial void OnSkinIDChanged();
    partial void OnBonusPointsChanging(string value);
    partial void OnBonusPointsChanged();
    partial void OnProfileIDChanging(string value);
    partial void OnProfileIDChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnUserDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnUserDateModifiedChanged();
    partial void OnUserQuestionsCommentsChanging(string value);
    partial void OnUserQuestionsCommentsChanged();
    partial void OnUserDepartmentRoleChanging(string value);
    partial void OnUserDepartmentRoleChanged();
    partial void OnUserAddressRegionChanging(string value);
    partial void OnUserAddressRegionChanged();
    partial void OnUserAddressProvinceChanging(string value);
    partial void OnUserAddressProvinceChanged();
    partial void OnAttendedStatusChanging(System.Nullable<int> value);
    partial void OnAttendedStatusChanged();
    partial void OnSpokenLanguageChanging(string value);
    partial void OnSpokenLanguageChanged();
    partial void OnUsersortEventsChanging(string value);
    partial void OnUsersortEventsChanged();
    partial void OnUserLandingPageChanging(string value);
    partial void OnUserLandingPageChanged();
    partial void OnUserReferrerSourceChanging(string value);
    partial void OnUserReferrerSourceChanged();
    partial void OnResellerIDChanging(string value);
    partial void OnResellerIDChanged();
    partial void OnUserBRIMChanging(string value);
    partial void OnUserBRIMChanged();
    partial void OnEmailSendStatusChanging(System.Nullable<int> value);
    partial void OnEmailSendStatusChanged();
    partial void OnAttendedLiveChanging(string value);
    partial void OnAttendedLiveChanged();
    partial void OnAttendedVODChanging(string value);
    partial void OnAttendedVODChanged();
    partial void OnSalesRepChanging(string value);
    partial void OnSalesRepChanged();
    partial void OnPortalDomainChanging(string value);
    partial void OnPortalDomainChanged();
    #endregion
		
		public TableUser()
		{
			this._TableAttendanceStatus = new EntitySet<TableAttendanceStatus>(new Action<TableAttendanceStatus>(this.attach_TableAttendanceStatus), new Action<TableAttendanceStatus>(this.detach_TableAttendanceStatus));
			this._TableGroups = new EntitySet<TableGroup>(new Action<TableGroup>(this.attach_TableGroups), new Action<TableGroup>(this.detach_TableGroups));
			this._TableProfile = default(EntityRef<TableProfile>);
			this._TableRole = default(EntityRef<TableRole>);
			this._TableSkin = default(EntityRef<TableSkin>);
			this._TableSkin1 = default(EntityRef<TableSkin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFName", DbType="VarChar(50)")]
		public string UserFName
		{
			get
			{
				return this._UserFName;
			}
			set
			{
				if ((this._UserFName != value))
				{
					this.OnUserFNameChanging(value);
					this.SendPropertyChanging();
					this._UserFName = value;
					this.SendPropertyChanged("UserFName");
					this.OnUserFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLName", DbType="VarChar(50)")]
		public string UserLName
		{
			get
			{
				return this._UserLName;
			}
			set
			{
				if ((this._UserLName != value))
				{
					this.OnUserLNameChanging(value);
					this.SendPropertyChanging();
					this._UserLName = value;
					this.SendPropertyChanged("UserLName");
					this.OnUserLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCompanyName", DbType="VarChar(100)")]
		public string UserCompanyName
		{
			get
			{
				return this._UserCompanyName;
			}
			set
			{
				if ((this._UserCompanyName != value))
				{
					this.OnUserCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._UserCompanyName = value;
					this.SendPropertyChanged("UserCompanyName");
					this.OnUserCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(100)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPhone", DbType="NVarChar(50)")]
		public string UserPhone
		{
			get
			{
				return this._UserPhone;
			}
			set
			{
				if ((this._UserPhone != value))
				{
					this.OnUserPhoneChanging(value);
					this.SendPropertyChanging();
					this._UserPhone = value;
					this.SendPropertyChanged("UserPhone");
					this.OnUserPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTwitter", DbType="VarChar(100)")]
		public string UserTwitter
		{
			get
			{
				return this._UserTwitter;
			}
			set
			{
				if ((this._UserTwitter != value))
				{
					this.OnUserTwitterChanging(value);
					this.SendPropertyChanging();
					this._UserTwitter = value;
					this.SendPropertyChanged("UserTwitter");
					this.OnUserTwitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFacebook", DbType="VarChar(100)")]
		public string UserFacebook
		{
			get
			{
				return this._UserFacebook;
			}
			set
			{
				if ((this._UserFacebook != value))
				{
					this.OnUserFacebookChanging(value);
					this.SendPropertyChanging();
					this._UserFacebook = value;
					this.SendPropertyChanged("UserFacebook");
					this.OnUserFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLinkedIn", DbType="VarChar(100)")]
		public string UserLinkedIn
		{
			get
			{
				return this._UserLinkedIn;
			}
			set
			{
				if ((this._UserLinkedIn != value))
				{
					this.OnUserLinkedInChanging(value);
					this.SendPropertyChanging();
					this._UserLinkedIn = value;
					this.SendPropertyChanged("UserLinkedIn");
					this.OnUserLinkedInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmailOptIn", DbType="NVarChar(50)")]
		public string UserEmailOptIn
		{
			get
			{
				return this._UserEmailOptIn;
			}
			set
			{
				if ((this._UserEmailOptIn != value))
				{
					this.OnUserEmailOptInChanging(value);
					this.SendPropertyChanging();
					this._UserEmailOptIn = value;
					this.SendPropertyChanged("UserEmailOptIn");
					this.OnUserEmailOptInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSocialOptIn", DbType="NVarChar(50)")]
		public string UserSocialOptIn
		{
			get
			{
				return this._UserSocialOptIn;
			}
			set
			{
				if ((this._UserSocialOptIn != value))
				{
					this.OnUserSocialOptInChanging(value);
					this.SendPropertyChanging();
					this._UserSocialOptIn = value;
					this.SendPropertyChanged("UserSocialOptIn");
					this.OnUserSocialOptInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressStreet1", DbType="VarChar(100)")]
		public string UserAddressStreet1
		{
			get
			{
				return this._UserAddressStreet1;
			}
			set
			{
				if ((this._UserAddressStreet1 != value))
				{
					this.OnUserAddressStreet1Changing(value);
					this.SendPropertyChanging();
					this._UserAddressStreet1 = value;
					this.SendPropertyChanged("UserAddressStreet1");
					this.OnUserAddressStreet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressStreet2", DbType="VarChar(100)")]
		public string UserAddressStreet2
		{
			get
			{
				return this._UserAddressStreet2;
			}
			set
			{
				if ((this._UserAddressStreet2 != value))
				{
					this.OnUserAddressStreet2Changing(value);
					this.SendPropertyChanging();
					this._UserAddressStreet2 = value;
					this.SendPropertyChanged("UserAddressStreet2");
					this.OnUserAddressStreet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressCity", DbType="VarChar(100)")]
		public string UserAddressCity
		{
			get
			{
				return this._UserAddressCity;
			}
			set
			{
				if ((this._UserAddressCity != value))
				{
					this.OnUserAddressCityChanging(value);
					this.SendPropertyChanging();
					this._UserAddressCity = value;
					this.SendPropertyChanged("UserAddressCity");
					this.OnUserAddressCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressZip", DbType="VarChar(100)")]
		public string UserAddressZip
		{
			get
			{
				return this._UserAddressZip;
			}
			set
			{
				if ((this._UserAddressZip != value))
				{
					this.OnUserAddressZipChanging(value);
					this.SendPropertyChanging();
					this._UserAddressZip = value;
					this.SendPropertyChanged("UserAddressZip");
					this.OnUserAddressZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressState", DbType="VarChar(100)")]
		public string UserAddressState
		{
			get
			{
				return this._UserAddressState;
			}
			set
			{
				if ((this._UserAddressState != value))
				{
					this.OnUserAddressStateChanging(value);
					this.SendPropertyChanging();
					this._UserAddressState = value;
					this.SendPropertyChanged("UserAddressState");
					this.OnUserAddressStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressCountry", DbType="VarChar(100)")]
		public string UserAddressCountry
		{
			get
			{
				return this._UserAddressCountry;
			}
			set
			{
				if ((this._UserAddressCountry != value))
				{
					this.OnUserAddressCountryChanging(value);
					this.SendPropertyChanging();
					this._UserAddressCountry = value;
					this.SendPropertyChanged("UserAddressCountry");
					this.OnUserAddressCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTitle", DbType="VarChar(50)")]
		public string UserTitle
		{
			get
			{
				return this._UserTitle;
			}
			set
			{
				if ((this._UserTitle != value))
				{
					this.OnUserTitleChanging(value);
					this.SendPropertyChanging();
					this._UserTitle = value;
					this.SendPropertyChanged("UserTitle");
					this.OnUserTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHandle", DbType="VarChar(50)")]
		public string UserHandle
		{
			get
			{
				return this._UserHandle;
			}
			set
			{
				if ((this._UserHandle != value))
				{
					this.OnUserHandleChanging(value);
					this.SendPropertyChanging();
					this._UserHandle = value;
					this.SendPropertyChanged("UserHandle");
					this.OnUserHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDepartment", DbType="VarChar(50)")]
		public string UserDepartment
		{
			get
			{
				return this._UserDepartment;
			}
			set
			{
				if ((this._UserDepartment != value))
				{
					this.OnUserDepartmentChanging(value);
					this.SendPropertyChanging();
					this._UserDepartment = value;
					this.SendPropertyChanged("UserDepartment");
					this.OnUserDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCascadeProfile", DbType="VarChar(50)")]
		public string UserCascadeProfile
		{
			get
			{
				return this._UserCascadeProfile;
			}
			set
			{
				if ((this._UserCascadeProfile != value))
				{
					this.OnUserCascadeProfileChanging(value);
					this.SendPropertyChanging();
					this._UserCascadeProfile = value;
					this.SendPropertyChanged("UserCascadeProfile");
					this.OnUserCascadeProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIntegrationKey", DbType="VarChar(100)")]
		public string UserIntegrationKey
		{
			get
			{
				return this._UserIntegrationKey;
			}
			set
			{
				if ((this._UserIntegrationKey != value))
				{
					this.OnUserIntegrationKeyChanging(value);
					this.SendPropertyChanging();
					this._UserIntegrationKey = value;
					this.SendPropertyChanged("UserIntegrationKey");
					this.OnUserIntegrationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> UserDateCreated
		{
			get
			{
				return this._UserDateCreated;
			}
			set
			{
				if ((this._UserDateCreated != value))
				{
					this.OnUserDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._UserDateCreated = value;
					this.SendPropertyChanged("UserDateCreated");
					this.OnUserDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleID", DbType="NVarChar(50)")]
		public string SecurityRoleID
		{
			get
			{
				return this._SecurityRoleID;
			}
			set
			{
				if ((this._SecurityRoleID != value))
				{
					if (this._TableRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityRoleIDChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleID = value;
					this.SendPropertyChanged("SecurityRoleID");
					this.OnSecurityRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinID", DbType="NVarChar(50)")]
		public string SkinID
		{
			get
			{
				return this._SkinID;
			}
			set
			{
				if ((this._SkinID != value))
				{
					if ((this._TableSkin.HasLoadedOrAssignedValue || this._TableSkin1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkinIDChanging(value);
					this.SendPropertyChanging();
					this._SkinID = value;
					this.SendPropertyChanged("SkinID");
					this.OnSkinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusPoints", DbType="NVarChar(50)")]
		public string BonusPoints
		{
			get
			{
				return this._BonusPoints;
			}
			set
			{
				if ((this._BonusPoints != value))
				{
					this.OnBonusPointsChanging(value);
					this.SendPropertyChanging();
					this._BonusPoints = value;
					this.SendPropertyChanged("BonusPoints");
					this.OnBonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="NVarChar(50)")]
		public string ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					if (this._TableProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NVarChar(50)")]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> UserDateModified
		{
			get
			{
				return this._UserDateModified;
			}
			set
			{
				if ((this._UserDateModified != value))
				{
					this.OnUserDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._UserDateModified = value;
					this.SendPropertyChanged("UserDateModified");
					this.OnUserDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserQuestionsComments", DbType="VarChar(MAX)")]
		public string UserQuestionsComments
		{
			get
			{
				return this._UserQuestionsComments;
			}
			set
			{
				if ((this._UserQuestionsComments != value))
				{
					this.OnUserQuestionsCommentsChanging(value);
					this.SendPropertyChanging();
					this._UserQuestionsComments = value;
					this.SendPropertyChanged("UserQuestionsComments");
					this.OnUserQuestionsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDepartmentRole", DbType="VarChar(50)")]
		public string UserDepartmentRole
		{
			get
			{
				return this._UserDepartmentRole;
			}
			set
			{
				if ((this._UserDepartmentRole != value))
				{
					this.OnUserDepartmentRoleChanging(value);
					this.SendPropertyChanging();
					this._UserDepartmentRole = value;
					this.SendPropertyChanged("UserDepartmentRole");
					this.OnUserDepartmentRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressRegion", DbType="VarChar(50)")]
		public string UserAddressRegion
		{
			get
			{
				return this._UserAddressRegion;
			}
			set
			{
				if ((this._UserAddressRegion != value))
				{
					this.OnUserAddressRegionChanging(value);
					this.SendPropertyChanging();
					this._UserAddressRegion = value;
					this.SendPropertyChanged("UserAddressRegion");
					this.OnUserAddressRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddressProvince", DbType="VarChar(200)")]
		public string UserAddressProvince
		{
			get
			{
				return this._UserAddressProvince;
			}
			set
			{
				if ((this._UserAddressProvince != value))
				{
					this.OnUserAddressProvinceChanging(value);
					this.SendPropertyChanging();
					this._UserAddressProvince = value;
					this.SendPropertyChanged("UserAddressProvince");
					this.OnUserAddressProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedStatus", DbType="Int")]
		public System.Nullable<int> AttendedStatus
		{
			get
			{
				return this._AttendedStatus;
			}
			set
			{
				if ((this._AttendedStatus != value))
				{
					this.OnAttendedStatusChanging(value);
					this.SendPropertyChanging();
					this._AttendedStatus = value;
					this.SendPropertyChanged("AttendedStatus");
					this.OnAttendedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpokenLanguage", DbType="VarChar(50)")]
		public string SpokenLanguage
		{
			get
			{
				return this._SpokenLanguage;
			}
			set
			{
				if ((this._SpokenLanguage != value))
				{
					this.OnSpokenLanguageChanging(value);
					this.SendPropertyChanging();
					this._SpokenLanguage = value;
					this.SendPropertyChanged("SpokenLanguage");
					this.OnSpokenLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersortEvents", DbType="VarChar(50)")]
		public string UsersortEvents
		{
			get
			{
				return this._UsersortEvents;
			}
			set
			{
				if ((this._UsersortEvents != value))
				{
					this.OnUsersortEventsChanging(value);
					this.SendPropertyChanging();
					this._UsersortEvents = value;
					this.SendPropertyChanged("UsersortEvents");
					this.OnUsersortEventsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLandingPage", DbType="VarChar(MAX)")]
		public string UserLandingPage
		{
			get
			{
				return this._UserLandingPage;
			}
			set
			{
				if ((this._UserLandingPage != value))
				{
					this.OnUserLandingPageChanging(value);
					this.SendPropertyChanging();
					this._UserLandingPage = value;
					this.SendPropertyChanged("UserLandingPage");
					this.OnUserLandingPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserReferrerSource", DbType="VarChar(MAX)")]
		public string UserReferrerSource
		{
			get
			{
				return this._UserReferrerSource;
			}
			set
			{
				if ((this._UserReferrerSource != value))
				{
					this.OnUserReferrerSourceChanging(value);
					this.SendPropertyChanging();
					this._UserReferrerSource = value;
					this.SendPropertyChanged("UserReferrerSource");
					this.OnUserReferrerSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="NVarChar(50)")]
		public string ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBRIM", DbType="VarChar(200)")]
		public string UserBRIM
		{
			get
			{
				return this._UserBRIM;
			}
			set
			{
				if ((this._UserBRIM != value))
				{
					this.OnUserBRIMChanging(value);
					this.SendPropertyChanging();
					this._UserBRIM = value;
					this.SendPropertyChanged("UserBRIM");
					this.OnUserBRIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSendStatus", DbType="Int")]
		public System.Nullable<int> EmailSendStatus
		{
			get
			{
				return this._EmailSendStatus;
			}
			set
			{
				if ((this._EmailSendStatus != value))
				{
					this.OnEmailSendStatusChanging(value);
					this.SendPropertyChanging();
					this._EmailSendStatus = value;
					this.SendPropertyChanged("EmailSendStatus");
					this.OnEmailSendStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedLive", DbType="VarChar(50)")]
		public string AttendedLive
		{
			get
			{
				return this._AttendedLive;
			}
			set
			{
				if ((this._AttendedLive != value))
				{
					this.OnAttendedLiveChanging(value);
					this.SendPropertyChanging();
					this._AttendedLive = value;
					this.SendPropertyChanged("AttendedLive");
					this.OnAttendedLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedVOD", DbType="VarChar(50)")]
		public string AttendedVOD
		{
			get
			{
				return this._AttendedVOD;
			}
			set
			{
				if ((this._AttendedVOD != value))
				{
					this.OnAttendedVODChanging(value);
					this.SendPropertyChanging();
					this._AttendedVOD = value;
					this.SendPropertyChanged("AttendedVOD");
					this.OnAttendedVODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesRep", DbType="VarChar(100)")]
		public string SalesRep
		{
			get
			{
				return this._SalesRep;
			}
			set
			{
				if ((this._SalesRep != value))
				{
					this.OnSalesRepChanging(value);
					this.SendPropertyChanging();
					this._SalesRep = value;
					this.SendPropertyChanged("SalesRep");
					this.OnSalesRepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDomain", DbType="VarChar(MAX)")]
		public string PortalDomain
		{
			get
			{
				return this._PortalDomain;
			}
			set
			{
				if ((this._PortalDomain != value))
				{
					this.OnPortalDomainChanging(value);
					this.SendPropertyChanging();
					this._PortalDomain = value;
					this.SendPropertyChanged("PortalDomain");
					this.OnPortalDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableUser_TableAttendanceStatus", Storage="_TableAttendanceStatus", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TableAttendanceStatus> TableAttendanceStatus
		{
			get
			{
				return this._TableAttendanceStatus;
			}
			set
			{
				this._TableAttendanceStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableUser_TableGroup", Storage="_TableGroups", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TableGroup> TableGroups
		{
			get
			{
				return this._TableGroups;
			}
			set
			{
				this._TableGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableProfile_TableUser", Storage="_TableProfile", ThisKey="ProfileID", OtherKey="ProfileID", IsForeignKey=true)]
		public TableProfile TableProfile
		{
			get
			{
				return this._TableProfile.Entity;
			}
			set
			{
				TableProfile previousValue = this._TableProfile.Entity;
				if (((previousValue != value) 
							|| (this._TableProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableProfile.Entity = null;
						previousValue.TableUsers.Remove(this);
					}
					this._TableProfile.Entity = value;
					if ((value != null))
					{
						value.TableUsers.Add(this);
						this._ProfileID = value.ProfileID;
					}
					else
					{
						this._ProfileID = default(string);
					}
					this.SendPropertyChanged("TableProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableRole_TableUser", Storage="_TableRole", ThisKey="SecurityRoleID", OtherKey="SecurityRoleID", IsForeignKey=true)]
		public TableRole TableRole
		{
			get
			{
				return this._TableRole.Entity;
			}
			set
			{
				TableRole previousValue = this._TableRole.Entity;
				if (((previousValue != value) 
							|| (this._TableRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableRole.Entity = null;
						previousValue.TableUsers.Remove(this);
					}
					this._TableRole.Entity = value;
					if ((value != null))
					{
						value.TableUsers.Add(this);
						this._SecurityRoleID = value.SecurityRoleID;
					}
					else
					{
						this._SecurityRoleID = default(string);
					}
					this.SendPropertyChanged("TableRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableSkin_TableUser", Storage="_TableSkin", ThisKey="SkinID", OtherKey="SkinID", IsForeignKey=true)]
		public TableSkin TableSkin
		{
			get
			{
				return this._TableSkin.Entity;
			}
			set
			{
				TableSkin previousValue = this._TableSkin.Entity;
				if (((previousValue != value) 
							|| (this._TableSkin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableSkin.Entity = null;
						previousValue.TableUsers.Remove(this);
					}
					this._TableSkin.Entity = value;
					if ((value != null))
					{
						value.TableUsers.Add(this);
						this._SkinID = value.SkinID;
					}
					else
					{
						this._SkinID = default(string);
					}
					this.SendPropertyChanged("TableSkin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableSkin_TableUser1", Storage="_TableSkin1", ThisKey="SkinID", OtherKey="SkinID", IsForeignKey=true)]
		public TableSkin TableSkin1
		{
			get
			{
				return this._TableSkin1.Entity;
			}
			set
			{
				TableSkin previousValue = this._TableSkin1.Entity;
				if (((previousValue != value) 
							|| (this._TableSkin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableSkin1.Entity = null;
						previousValue.TableUsers1.Remove(this);
					}
					this._TableSkin1.Entity = value;
					if ((value != null))
					{
						value.TableUsers1.Add(this);
						this._SkinID = value.SkinID;
					}
					else
					{
						this._SkinID = default(string);
					}
					this.SendPropertyChanged("TableSkin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableAttendanceStatus(TableAttendanceStatus entity)
		{
			this.SendPropertyChanging();
			entity.TableUser = this;
		}
		
		private void detach_TableAttendanceStatus(TableAttendanceStatus entity)
		{
			this.SendPropertyChanging();
			entity.TableUser = null;
		}
		
		private void attach_TableGroups(TableGroup entity)
		{
			this.SendPropertyChanging();
			entity.TableUser = this;
		}
		
		private void detach_TableGroups(TableGroup entity)
		{
			this.SendPropertyChanging();
			entity.TableUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableAssets")]
	public partial class TableAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _EventID;
		
		private string _AssetID;
		
		private string _AssetURL;
		
		private string _AssetResolution;
		
		private System.Nullable<System.DateTime> _AssetDateCreated;
		
		private string _AssetTypeID;
		
		private string _AssetName;
		
		private string _AssetDescription;
		
		private string _AssetFileName;
		
		private string _AssetDuration;
		
		private string _AssetThumbnail;
		
		private System.Nullable<System.DateTime> _AssetDateModified;
		
		private string _ParentAssetID;
		
		private string _AssetOrder;
		
		private string _AssetStatus;
		
		private string _AssetMetadata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnAssetIDChanging(string value);
    partial void OnAssetIDChanged();
    partial void OnAssetURLChanging(string value);
    partial void OnAssetURLChanged();
    partial void OnAssetResolutionChanging(string value);
    partial void OnAssetResolutionChanged();
    partial void OnAssetDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnAssetDateCreatedChanged();
    partial void OnAssetTypeIDChanging(string value);
    partial void OnAssetTypeIDChanged();
    partial void OnAssetNameChanging(string value);
    partial void OnAssetNameChanged();
    partial void OnAssetDescriptionChanging(string value);
    partial void OnAssetDescriptionChanged();
    partial void OnAssetFileNameChanging(string value);
    partial void OnAssetFileNameChanged();
    partial void OnAssetDurationChanging(string value);
    partial void OnAssetDurationChanged();
    partial void OnAssetThumbnailChanging(string value);
    partial void OnAssetThumbnailChanged();
    partial void OnAssetDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnAssetDateModifiedChanged();
    partial void OnParentAssetIDChanging(string value);
    partial void OnParentAssetIDChanged();
    partial void OnAssetOrderChanging(string value);
    partial void OnAssetOrderChanged();
    partial void OnAssetStatusChanging(string value);
    partial void OnAssetStatusChanged();
    partial void OnAssetMetadataChanging(string value);
    partial void OnAssetMetadataChanged();
    #endregion
		
		public TableAsset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50)")]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetURL", DbType="VarChar(MAX)")]
		public string AssetURL
		{
			get
			{
				return this._AssetURL;
			}
			set
			{
				if ((this._AssetURL != value))
				{
					this.OnAssetURLChanging(value);
					this.SendPropertyChanging();
					this._AssetURL = value;
					this.SendPropertyChanged("AssetURL");
					this.OnAssetURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetResolution", DbType="VarChar(MAX)")]
		public string AssetResolution
		{
			get
			{
				return this._AssetResolution;
			}
			set
			{
				if ((this._AssetResolution != value))
				{
					this.OnAssetResolutionChanging(value);
					this.SendPropertyChanging();
					this._AssetResolution = value;
					this.SendPropertyChanged("AssetResolution");
					this.OnAssetResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssetDateCreated
		{
			get
			{
				return this._AssetDateCreated;
			}
			set
			{
				if ((this._AssetDateCreated != value))
				{
					this.OnAssetDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._AssetDateCreated = value;
					this.SendPropertyChanged("AssetDateCreated");
					this.OnAssetDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeID", DbType="NVarChar(50)")]
		public string AssetTypeID
		{
			get
			{
				return this._AssetTypeID;
			}
			set
			{
				if ((this._AssetTypeID != value))
				{
					this.OnAssetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeID = value;
					this.SendPropertyChanged("AssetTypeID");
					this.OnAssetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetName", DbType="VarChar(MAX)")]
		public string AssetName
		{
			get
			{
				return this._AssetName;
			}
			set
			{
				if ((this._AssetName != value))
				{
					this.OnAssetNameChanging(value);
					this.SendPropertyChanging();
					this._AssetName = value;
					this.SendPropertyChanged("AssetName");
					this.OnAssetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDescription", DbType="VarChar(MAX)")]
		public string AssetDescription
		{
			get
			{
				return this._AssetDescription;
			}
			set
			{
				if ((this._AssetDescription != value))
				{
					this.OnAssetDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AssetDescription = value;
					this.SendPropertyChanged("AssetDescription");
					this.OnAssetDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetFileName", DbType="VarChar(200)")]
		public string AssetFileName
		{
			get
			{
				return this._AssetFileName;
			}
			set
			{
				if ((this._AssetFileName != value))
				{
					this.OnAssetFileNameChanging(value);
					this.SendPropertyChanging();
					this._AssetFileName = value;
					this.SendPropertyChanged("AssetFileName");
					this.OnAssetFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDuration", DbType="VarChar(200)")]
		public string AssetDuration
		{
			get
			{
				return this._AssetDuration;
			}
			set
			{
				if ((this._AssetDuration != value))
				{
					this.OnAssetDurationChanging(value);
					this.SendPropertyChanging();
					this._AssetDuration = value;
					this.SendPropertyChanged("AssetDuration");
					this.OnAssetDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetThumbnail", DbType="VarChar(200)")]
		public string AssetThumbnail
		{
			get
			{
				return this._AssetThumbnail;
			}
			set
			{
				if ((this._AssetThumbnail != value))
				{
					this.OnAssetThumbnailChanging(value);
					this.SendPropertyChanging();
					this._AssetThumbnail = value;
					this.SendPropertyChanged("AssetThumbnail");
					this.OnAssetThumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssetDateModified
		{
			get
			{
				return this._AssetDateModified;
			}
			set
			{
				if ((this._AssetDateModified != value))
				{
					this.OnAssetDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._AssetDateModified = value;
					this.SendPropertyChanged("AssetDateModified");
					this.OnAssetDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentAssetID", DbType="VarChar(50)")]
		public string ParentAssetID
		{
			get
			{
				return this._ParentAssetID;
			}
			set
			{
				if ((this._ParentAssetID != value))
				{
					this.OnParentAssetIDChanging(value);
					this.SendPropertyChanging();
					this._ParentAssetID = value;
					this.SendPropertyChanged("ParentAssetID");
					this.OnParentAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetOrder", DbType="VarChar(50)")]
		public string AssetOrder
		{
			get
			{
				return this._AssetOrder;
			}
			set
			{
				if ((this._AssetOrder != value))
				{
					this.OnAssetOrderChanging(value);
					this.SendPropertyChanging();
					this._AssetOrder = value;
					this.SendPropertyChanged("AssetOrder");
					this.OnAssetOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetStatus", DbType="VarChar(50)")]
		public string AssetStatus
		{
			get
			{
				return this._AssetStatus;
			}
			set
			{
				if ((this._AssetStatus != value))
				{
					this.OnAssetStatusChanging(value);
					this.SendPropertyChanging();
					this._AssetStatus = value;
					this.SendPropertyChanged("AssetStatus");
					this.OnAssetStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMetadata", DbType="VarChar(MAX)")]
		public string AssetMetadata
		{
			get
			{
				return this._AssetMetadata;
			}
			set
			{
				if ((this._AssetMetadata != value))
				{
					this.OnAssetMetadataChanging(value);
					this.SendPropertyChanging();
					this._AssetMetadata = value;
					this.SendPropertyChanged("AssetMetadata");
					this.OnAssetMetadataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableAssetTracking")]
	public partial class TableAssetTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventID;
		
		private string _UserID;
		
		private string _CustomerID;
		
		private int _TrackingID;
		
		private string _AssetID;
		
		private string _AssetStatistics;
		
		private System.Nullable<System.DateTime> _TrackAssetDateCreated;
		
		private System.Nullable<System.DateTime> _TrackingArrivedDateTime;
		
		private System.Nullable<System.DateTime> _TrackingDepartedDateTime;
		
		private string _EventPageURL;
		
		private string _IPAddress;
		
		private string _EmailAddress;
		
		private string _AssetStatus;
		
		private string _UserAgent;
		
		private string _ReferrerSource;
		
		private string _ResellerID;
		
		private string _LandingPage;
		
		private string _sortEvents;
		
		private string _UserReferrerSource;
		
		private string _UserBRIM;
		
		private string _timePosition;
		
		private string _timeDuration;
		
		private string _EmailOptIn;
		
		private string _AssetType;
		
		private string _AssetError;
		
		private string _AssetBuffering;
		
		private string _AssetQuality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnTrackingIDChanging(int value);
    partial void OnTrackingIDChanged();
    partial void OnAssetIDChanging(string value);
    partial void OnAssetIDChanged();
    partial void OnAssetStatisticsChanging(string value);
    partial void OnAssetStatisticsChanged();
    partial void OnTrackAssetDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnTrackAssetDateCreatedChanged();
    partial void OnTrackingArrivedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTrackingArrivedDateTimeChanged();
    partial void OnTrackingDepartedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTrackingDepartedDateTimeChanged();
    partial void OnEventPageURLChanging(string value);
    partial void OnEventPageURLChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnAssetStatusChanging(string value);
    partial void OnAssetStatusChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnReferrerSourceChanging(string value);
    partial void OnReferrerSourceChanged();
    partial void OnResellerIDChanging(string value);
    partial void OnResellerIDChanged();
    partial void OnLandingPageChanging(string value);
    partial void OnLandingPageChanged();
    partial void OnsortEventsChanging(string value);
    partial void OnsortEventsChanged();
    partial void OnUserReferrerSourceChanging(string value);
    partial void OnUserReferrerSourceChanged();
    partial void OnUserBRIMChanging(string value);
    partial void OnUserBRIMChanged();
    partial void OntimePositionChanging(string value);
    partial void OntimePositionChanged();
    partial void OntimeDurationChanging(string value);
    partial void OntimeDurationChanged();
    partial void OnEmailOptInChanging(string value);
    partial void OnEmailOptInChanged();
    partial void OnAssetTypeChanging(string value);
    partial void OnAssetTypeChanged();
    partial void OnAssetErrorChanging(string value);
    partial void OnAssetErrorChanged();
    partial void OnAssetBufferingChanging(string value);
    partial void OnAssetBufferingChanged();
    partial void OnAssetQualityChanging(string value);
    partial void OnAssetQualityChanged();
    #endregion
		
		public TableAssetTracking()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrackingID
		{
			get
			{
				return this._TrackingID;
			}
			set
			{
				if ((this._TrackingID != value))
				{
					this.OnTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._TrackingID = value;
					this.SendPropertyChanged("TrackingID");
					this.OnTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="NVarChar(50)")]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetStatistics", DbType="VarChar(MAX)")]
		public string AssetStatistics
		{
			get
			{
				return this._AssetStatistics;
			}
			set
			{
				if ((this._AssetStatistics != value))
				{
					this.OnAssetStatisticsChanging(value);
					this.SendPropertyChanging();
					this._AssetStatistics = value;
					this.SendPropertyChanged("AssetStatistics");
					this.OnAssetStatisticsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackAssetDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrackAssetDateCreated
		{
			get
			{
				return this._TrackAssetDateCreated;
			}
			set
			{
				if ((this._TrackAssetDateCreated != value))
				{
					this.OnTrackAssetDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._TrackAssetDateCreated = value;
					this.SendPropertyChanged("TrackAssetDateCreated");
					this.OnTrackAssetDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingArrivedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrackingArrivedDateTime
		{
			get
			{
				return this._TrackingArrivedDateTime;
			}
			set
			{
				if ((this._TrackingArrivedDateTime != value))
				{
					this.OnTrackingArrivedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TrackingArrivedDateTime = value;
					this.SendPropertyChanged("TrackingArrivedDateTime");
					this.OnTrackingArrivedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDepartedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrackingDepartedDateTime
		{
			get
			{
				return this._TrackingDepartedDateTime;
			}
			set
			{
				if ((this._TrackingDepartedDateTime != value))
				{
					this.OnTrackingDepartedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TrackingDepartedDateTime = value;
					this.SendPropertyChanged("TrackingDepartedDateTime");
					this.OnTrackingDepartedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventPageURL", DbType="VarChar(250)")]
		public string EventPageURL
		{
			get
			{
				return this._EventPageURL;
			}
			set
			{
				if ((this._EventPageURL != value))
				{
					this.OnEventPageURLChanging(value);
					this.SendPropertyChanging();
					this._EventPageURL = value;
					this.SendPropertyChanged("EventPageURL");
					this.OnEventPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(250)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(250)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetStatus", DbType="VarChar(100)")]
		public string AssetStatus
		{
			get
			{
				return this._AssetStatus;
			}
			set
			{
				if ((this._AssetStatus != value))
				{
					this.OnAssetStatusChanging(value);
					this.SendPropertyChanging();
					this._AssetStatus = value;
					this.SendPropertyChanged("AssetStatus");
					this.OnAssetStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="VarChar(100)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferrerSource", DbType="VarChar(MAX)")]
		public string ReferrerSource
		{
			get
			{
				return this._ReferrerSource;
			}
			set
			{
				if ((this._ReferrerSource != value))
				{
					this.OnReferrerSourceChanging(value);
					this.SendPropertyChanging();
					this._ReferrerSource = value;
					this.SendPropertyChanged("ReferrerSource");
					this.OnReferrerSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="VarChar(MAX)")]
		public string ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandingPage", DbType="VarChar(MAX)")]
		public string LandingPage
		{
			get
			{
				return this._LandingPage;
			}
			set
			{
				if ((this._LandingPage != value))
				{
					this.OnLandingPageChanging(value);
					this.SendPropertyChanging();
					this._LandingPage = value;
					this.SendPropertyChanged("LandingPage");
					this.OnLandingPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortEvents", DbType="VarChar(MAX)")]
		public string sortEvents
		{
			get
			{
				return this._sortEvents;
			}
			set
			{
				if ((this._sortEvents != value))
				{
					this.OnsortEventsChanging(value);
					this.SendPropertyChanging();
					this._sortEvents = value;
					this.SendPropertyChanged("sortEvents");
					this.OnsortEventsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserReferrerSource", DbType="VarChar(MAX)")]
		public string UserReferrerSource
		{
			get
			{
				return this._UserReferrerSource;
			}
			set
			{
				if ((this._UserReferrerSource != value))
				{
					this.OnUserReferrerSourceChanging(value);
					this.SendPropertyChanging();
					this._UserReferrerSource = value;
					this.SendPropertyChanged("UserReferrerSource");
					this.OnUserReferrerSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBRIM", DbType="VarChar(200)")]
		public string UserBRIM
		{
			get
			{
				return this._UserBRIM;
			}
			set
			{
				if ((this._UserBRIM != value))
				{
					this.OnUserBRIMChanging(value);
					this.SendPropertyChanging();
					this._UserBRIM = value;
					this.SendPropertyChanged("UserBRIM");
					this.OnUserBRIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePosition", DbType="VarChar(200)")]
		public string timePosition
		{
			get
			{
				return this._timePosition;
			}
			set
			{
				if ((this._timePosition != value))
				{
					this.OntimePositionChanging(value);
					this.SendPropertyChanging();
					this._timePosition = value;
					this.SendPropertyChanged("timePosition");
					this.OntimePositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeDuration", DbType="VarChar(200)")]
		public string timeDuration
		{
			get
			{
				return this._timeDuration;
			}
			set
			{
				if ((this._timeDuration != value))
				{
					this.OntimeDurationChanging(value);
					this.SendPropertyChanging();
					this._timeDuration = value;
					this.SendPropertyChanged("timeDuration");
					this.OntimeDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailOptIn", DbType="VarChar(10)")]
		public string EmailOptIn
		{
			get
			{
				return this._EmailOptIn;
			}
			set
			{
				if ((this._EmailOptIn != value))
				{
					this.OnEmailOptInChanging(value);
					this.SendPropertyChanging();
					this._EmailOptIn = value;
					this.SendPropertyChanged("EmailOptIn");
					this.OnEmailOptInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetType", DbType="VarChar(MAX)")]
		public string AssetType
		{
			get
			{
				return this._AssetType;
			}
			set
			{
				if ((this._AssetType != value))
				{
					this.OnAssetTypeChanging(value);
					this.SendPropertyChanging();
					this._AssetType = value;
					this.SendPropertyChanged("AssetType");
					this.OnAssetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetError", DbType="VarChar(50)")]
		public string AssetError
		{
			get
			{
				return this._AssetError;
			}
			set
			{
				if ((this._AssetError != value))
				{
					this.OnAssetErrorChanging(value);
					this.SendPropertyChanging();
					this._AssetError = value;
					this.SendPropertyChanged("AssetError");
					this.OnAssetErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetBuffering", DbType="VarChar(50)")]
		public string AssetBuffering
		{
			get
			{
				return this._AssetBuffering;
			}
			set
			{
				if ((this._AssetBuffering != value))
				{
					this.OnAssetBufferingChanging(value);
					this.SendPropertyChanging();
					this._AssetBuffering = value;
					this.SendPropertyChanged("AssetBuffering");
					this.OnAssetBufferingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetQuality", DbType="VarChar(50)")]
		public string AssetQuality
		{
			get
			{
				return this._AssetQuality;
			}
			set
			{
				if ((this._AssetQuality != value))
				{
					this.OnAssetQualityChanging(value);
					this.SendPropertyChanging();
					this._AssetQuality = value;
					this.SendPropertyChanged("AssetQuality");
					this.OnAssetQualityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableAssetType")]
	public partial class TableAssetType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AssetTypeID;
		
		private string _AssetTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetTypeIDChanging(string value);
    partial void OnAssetTypeIDChanged();
    partial void OnAssetTypeNameChanging(string value);
    partial void OnAssetTypeNameChanged();
    #endregion
		
		public TableAssetType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AssetTypeID
		{
			get
			{
				return this._AssetTypeID;
			}
			set
			{
				if ((this._AssetTypeID != value))
				{
					this.OnAssetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeID = value;
					this.SendPropertyChanged("AssetTypeID");
					this.OnAssetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetTypeName
		{
			get
			{
				return this._AssetTypeName;
			}
			set
			{
				if ((this._AssetTypeName != value))
				{
					this.OnAssetTypeNameChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeName = value;
					this.SendPropertyChanged("AssetTypeName");
					this.OnAssetTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableAttendanceStatus")]
	public partial class TableAttendanceStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventID;
		
		private int _AttendedID;
		
		private string _AttendedStatus;
		
		private string _UserID;
		
		private System.DateTime _AttendanceDateCreated;
		
		private EntityRef<TableUser> _TableUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnAttendedIDChanging(int value);
    partial void OnAttendedIDChanged();
    partial void OnAttendedStatusChanging(string value);
    partial void OnAttendedStatusChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnAttendanceDateCreatedChanging(System.DateTime value);
    partial void OnAttendanceDateCreatedChanged();
    #endregion
		
		public TableAttendanceStatus()
		{
			this._TableUser = default(EntityRef<TableUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttendedID
		{
			get
			{
				return this._AttendedID;
			}
			set
			{
				if ((this._AttendedID != value))
				{
					this.OnAttendedIDChanging(value);
					this.SendPropertyChanging();
					this._AttendedID = value;
					this.SendPropertyChanged("AttendedID");
					this.OnAttendedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedStatus", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AttendedStatus
		{
			get
			{
				return this._AttendedStatus;
			}
			set
			{
				if ((this._AttendedStatus != value))
				{
					this.OnAttendedStatusChanging(value);
					this.SendPropertyChanging();
					this._AttendedStatus = value;
					this.SendPropertyChanged("AttendedStatus");
					this.OnAttendedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._TableUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime AttendanceDateCreated
		{
			get
			{
				return this._AttendanceDateCreated;
			}
			set
			{
				if ((this._AttendanceDateCreated != value))
				{
					this.OnAttendanceDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDateCreated = value;
					this.SendPropertyChanged("AttendanceDateCreated");
					this.OnAttendanceDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableUser_TableAttendanceStatus", Storage="_TableUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public TableUser TableUser
		{
			get
			{
				return this._TableUser.Entity;
			}
			set
			{
				TableUser previousValue = this._TableUser.Entity;
				if (((previousValue != value) 
							|| (this._TableUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableUser.Entity = null;
						previousValue.TableAttendanceStatus.Remove(this);
					}
					this._TableUser.Entity = value;
					if ((value != null))
					{
						value.TableAttendanceStatus.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("TableUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableCDN")]
	public partial class TableCDN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _cdnLocation;
		
		private string _cdnServerURL;
		
		private string _cdnTTL;
		
		private string _CDNServerID;
		
		private string _CDNServerRootURL;
		
		private string _CustomerID;
		
		private string _CDNServerType;
		
		private string _CDNServerManagerAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncdnLocationChanging(string value);
    partial void OncdnLocationChanged();
    partial void OncdnServerURLChanging(string value);
    partial void OncdnServerURLChanged();
    partial void OncdnTTLChanging(string value);
    partial void OncdnTTLChanged();
    partial void OnCDNServerIDChanging(string value);
    partial void OnCDNServerIDChanged();
    partial void OnCDNServerRootURLChanging(string value);
    partial void OnCDNServerRootURLChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnCDNServerTypeChanging(string value);
    partial void OnCDNServerTypeChanged();
    partial void OnCDNServerManagerAddressChanging(string value);
    partial void OnCDNServerManagerAddressChanged();
    #endregion
		
		public TableCDN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdnLocation", DbType="VarChar(200)")]
		public string cdnLocation
		{
			get
			{
				return this._cdnLocation;
			}
			set
			{
				if ((this._cdnLocation != value))
				{
					this.OncdnLocationChanging(value);
					this.SendPropertyChanging();
					this._cdnLocation = value;
					this.SendPropertyChanged("cdnLocation");
					this.OncdnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdnServerURL", DbType="VarChar(MAX)")]
		public string cdnServerURL
		{
			get
			{
				return this._cdnServerURL;
			}
			set
			{
				if ((this._cdnServerURL != value))
				{
					this.OncdnServerURLChanging(value);
					this.SendPropertyChanging();
					this._cdnServerURL = value;
					this.SendPropertyChanged("cdnServerURL");
					this.OncdnServerURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdnTTL", DbType="VarChar(200)")]
		public string cdnTTL
		{
			get
			{
				return this._cdnTTL;
			}
			set
			{
				if ((this._cdnTTL != value))
				{
					this.OncdnTTLChanging(value);
					this.SendPropertyChanging();
					this._cdnTTL = value;
					this.SendPropertyChanged("cdnTTL");
					this.OncdnTTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDNServerID", DbType="VarChar(50)")]
		public string CDNServerID
		{
			get
			{
				return this._CDNServerID;
			}
			set
			{
				if ((this._CDNServerID != value))
				{
					this.OnCDNServerIDChanging(value);
					this.SendPropertyChanging();
					this._CDNServerID = value;
					this.SendPropertyChanged("CDNServerID");
					this.OnCDNServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDNServerRootURL", DbType="VarChar(MAX)")]
		public string CDNServerRootURL
		{
			get
			{
				return this._CDNServerRootURL;
			}
			set
			{
				if ((this._CDNServerRootURL != value))
				{
					this.OnCDNServerRootURLChanging(value);
					this.SendPropertyChanging();
					this._CDNServerRootURL = value;
					this.SendPropertyChanged("CDNServerRootURL");
					this.OnCDNServerRootURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDNServerType", DbType="VarChar(50)")]
		public string CDNServerType
		{
			get
			{
				return this._CDNServerType;
			}
			set
			{
				if ((this._CDNServerType != value))
				{
					this.OnCDNServerTypeChanging(value);
					this.SendPropertyChanging();
					this._CDNServerType = value;
					this.SendPropertyChanged("CDNServerType");
					this.OnCDNServerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDNServerManagerAddress", DbType="VarChar(MAX)")]
		public string CDNServerManagerAddress
		{
			get
			{
				return this._CDNServerManagerAddress;
			}
			set
			{
				if ((this._CDNServerManagerAddress != value))
				{
					this.OnCDNServerManagerAddressChanging(value);
					this.SendPropertyChanging();
					this._CDNServerManagerAddress = value;
					this.SendPropertyChanged("CDNServerManagerAddress");
					this.OnCDNServerManagerAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableCustomers")]
	public partial class TableCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _CustomerName;
		
		private System.DateTime _CustomerDateCreated;
		
		private string _CustomerDescription;
		
		private string _CustomerEmail;
		
		private string _Status;
		
		private string _CustomerPortalURL;
		
		private EntitySet<TableGroup> _TableGroups;
		
		private EntitySet<TableSkin> _TableSkins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerDateCreatedChanging(System.DateTime value);
    partial void OnCustomerDateCreatedChanged();
    partial void OnCustomerDescriptionChanging(string value);
    partial void OnCustomerDescriptionChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCustomerPortalURLChanging(string value);
    partial void OnCustomerPortalURLChanged();
    #endregion
		
		public TableCustomer()
		{
			this._TableGroups = new EntitySet<TableGroup>(new Action<TableGroup>(this.attach_TableGroups), new Action<TableGroup>(this.detach_TableGroups));
			this._TableSkins = new EntitySet<TableSkin>(new Action<TableSkin>(this.attach_TableSkins), new Action<TableSkin>(this.detach_TableSkins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime CustomerDateCreated
		{
			get
			{
				return this._CustomerDateCreated;
			}
			set
			{
				if ((this._CustomerDateCreated != value))
				{
					this.OnCustomerDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._CustomerDateCreated = value;
					this.SendPropertyChanged("CustomerDateCreated");
					this.OnCustomerDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDescription", DbType="VarChar(MAX)")]
		public string CustomerDescription
		{
			get
			{
				return this._CustomerDescription;
			}
			set
			{
				if ((this._CustomerDescription != value))
				{
					this.OnCustomerDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CustomerDescription = value;
					this.SendPropertyChanged("CustomerDescription");
					this.OnCustomerDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="VarChar(100)")]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPortalURL", DbType="VarChar(MAX)")]
		public string CustomerPortalURL
		{
			get
			{
				return this._CustomerPortalURL;
			}
			set
			{
				if ((this._CustomerPortalURL != value))
				{
					this.OnCustomerPortalURLChanging(value);
					this.SendPropertyChanging();
					this._CustomerPortalURL = value;
					this.SendPropertyChanged("CustomerPortalURL");
					this.OnCustomerPortalURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCustomer_TableGroup", Storage="_TableGroups", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<TableGroup> TableGroups
		{
			get
			{
				return this._TableGroups;
			}
			set
			{
				this._TableGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCustomer_TableSkin", Storage="_TableSkins", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<TableSkin> TableSkins
		{
			get
			{
				return this._TableSkins;
			}
			set
			{
				this._TableSkins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableGroups(TableGroup entity)
		{
			this.SendPropertyChanging();
			entity.TableCustomer = this;
		}
		
		private void detach_TableGroups(TableGroup entity)
		{
			this.SendPropertyChanging();
			entity.TableCustomer = null;
		}
		
		private void attach_TableSkins(TableSkin entity)
		{
			this.SendPropertyChanging();
			entity.TableCustomer = this;
		}
		
		private void detach_TableSkins(TableSkin entity)
		{
			this.SendPropertyChanging();
			entity.TableCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableEncoderAsset")]
	public partial class TableEncoderAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EncoderAssetID;
		
		private string _EncoderName;
		
		private string _EncoderDescription;
		
		private string _EncoderLocation;
		
		private string _CustomerID;
		
		private string _EncoderAddress;
		
		private string _OriginBaseURL;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEncoderAssetIDChanging(string value);
    partial void OnEncoderAssetIDChanged();
    partial void OnEncoderNameChanging(string value);
    partial void OnEncoderNameChanged();
    partial void OnEncoderDescriptionChanging(string value);
    partial void OnEncoderDescriptionChanged();
    partial void OnEncoderLocationChanging(string value);
    partial void OnEncoderLocationChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEncoderAddressChanging(string value);
    partial void OnEncoderAddressChanged();
    partial void OnOriginBaseURLChanging(string value);
    partial void OnOriginBaseURLChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public TableEncoderAsset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncoderAssetID", DbType="VarChar(50)")]
		public string EncoderAssetID
		{
			get
			{
				return this._EncoderAssetID;
			}
			set
			{
				if ((this._EncoderAssetID != value))
				{
					this.OnEncoderAssetIDChanging(value);
					this.SendPropertyChanging();
					this._EncoderAssetID = value;
					this.SendPropertyChanged("EncoderAssetID");
					this.OnEncoderAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncoderName", DbType="VarChar(100)")]
		public string EncoderName
		{
			get
			{
				return this._EncoderName;
			}
			set
			{
				if ((this._EncoderName != value))
				{
					this.OnEncoderNameChanging(value);
					this.SendPropertyChanging();
					this._EncoderName = value;
					this.SendPropertyChanged("EncoderName");
					this.OnEncoderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncoderDescription", DbType="VarChar(250)")]
		public string EncoderDescription
		{
			get
			{
				return this._EncoderDescription;
			}
			set
			{
				if ((this._EncoderDescription != value))
				{
					this.OnEncoderDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EncoderDescription = value;
					this.SendPropertyChanged("EncoderDescription");
					this.OnEncoderDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncoderLocation", DbType="VarChar(50)")]
		public string EncoderLocation
		{
			get
			{
				return this._EncoderLocation;
			}
			set
			{
				if ((this._EncoderLocation != value))
				{
					this.OnEncoderLocationChanging(value);
					this.SendPropertyChanging();
					this._EncoderLocation = value;
					this.SendPropertyChanged("EncoderLocation");
					this.OnEncoderLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncoderAddress", DbType="VarChar(MAX)")]
		public string EncoderAddress
		{
			get
			{
				return this._EncoderAddress;
			}
			set
			{
				if ((this._EncoderAddress != value))
				{
					this.OnEncoderAddressChanging(value);
					this.SendPropertyChanging();
					this._EncoderAddress = value;
					this.SendPropertyChanged("EncoderAddress");
					this.OnEncoderAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginBaseURL", DbType="VarChar(MAX)")]
		public string OriginBaseURL
		{
			get
			{
				return this._OriginBaseURL;
			}
			set
			{
				if ((this._OriginBaseURL != value))
				{
					this.OnOriginBaseURLChanging(value);
					this.SendPropertyChanging();
					this._OriginBaseURL = value;
					this.SendPropertyChanged("OriginBaseURL");
					this.OnOriginBaseURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableEvents")]
	public partial class TableEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventID;
		
		private string _CustomerID;
		
		private string _EventName;
		
		private string _EventDescription;
		
		private string _EventDuration;
		
		private string _EventAsset;
		
		private string _EventType;
		
		private string _EventStatusID;
		
		private System.DateTime _EventDateCreated;
		
		private string _EventTypeID;
		
		private string _SkinID;
		
		private string _UserID;
		
		private string _GroupID;
		
		private string _EventDateModified;
		
		private string _EventReleaseDate;
		
		private string _EventEOLDate;
		
		private string _EventPageURL;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private string _EventStatus;
		
		private string _RegistrationBodyHTML;
		
		private string _RegistrationBodyPlain;
		
		private string _ReminderBodyHTML;
		
		private string _ReminderBodyPlain;
		
		private string _SorryBodyHTML;
		
		private string _SorryBodyPlain;
		
		private string _VODAvailableBodyHTML;
		
		private string _VODAvailableBodyPlain;
		
		private string _ReminderDeliveryDate;
		
		private string _SorryDeliveryDate;
		
		private string _VODAvailableDeliveryDate;
		
		private string _EventRegPageURL;
		
		private string _EventPlayerPageURL;
		
		private string _EventLoginPageURL;
		
		private string _CalendarURL;
		
		private string _EmailRegistrationFrom;
		
		private string _EmailRegistrationSubject;
		
		private string _EmailRegistrationSendStatus;
		
		private string _ContactBodyHTML;
		
		private string _ContactBodyPlain;
		
		private string _EmailContactSendStatus;
		
		private string _EmailContactSubject;
		
		private string _EmailContactFrom;
		
		private string _ContactThankYouPage;
		
		private string _RegCookieCreateStatus;
		
		private string _EventQuestionRedirURL;
		
		private string _PollRedirURL;
		
		private string _EventSite;
		
		private string _AssetFileName;
		
		private string _AssetID;
		
		private string _EventRedirectPageURL;
		
		private System.Nullable<int> _EmailReminderSendStatus;
		
		private string _ReminderSubject;
		
		private string _EmailRemarketBodyHTML;
		
		private string _RemarketURL;
		
		private string _EventThankYouRedirectURL;
		
		private string _VODAvailableSubject;
		
		private string _SorrySubject;
		
		private string _Passcode;
		
		private string _EventMetadata;
		
		private string _ReferenceID;
		
		private string _EmbedCode;
		
		private EntityRef<TableEventStatus> _TableEventStatus;
		
		private EntityRef<TableEventType> _TableEventType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventDescriptionChanging(string value);
    partial void OnEventDescriptionChanged();
    partial void OnEventDurationChanging(string value);
    partial void OnEventDurationChanged();
    partial void OnEventAssetChanging(string value);
    partial void OnEventAssetChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventStatusIDChanging(string value);
    partial void OnEventStatusIDChanged();
    partial void OnEventDateCreatedChanging(System.DateTime value);
    partial void OnEventDateCreatedChanged();
    partial void OnEventTypeIDChanging(string value);
    partial void OnEventTypeIDChanged();
    partial void OnSkinIDChanging(string value);
    partial void OnSkinIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnEventDateModifiedChanging(string value);
    partial void OnEventDateModifiedChanged();
    partial void OnEventReleaseDateChanging(string value);
    partial void OnEventReleaseDateChanged();
    partial void OnEventEOLDateChanging(string value);
    partial void OnEventEOLDateChanged();
    partial void OnEventPageURLChanging(string value);
    partial void OnEventPageURLChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnEventStatusChanging(string value);
    partial void OnEventStatusChanged();
    partial void OnRegistrationBodyHTMLChanging(string value);
    partial void OnRegistrationBodyHTMLChanged();
    partial void OnRegistrationBodyPlainChanging(string value);
    partial void OnRegistrationBodyPlainChanged();
    partial void OnReminderBodyHTMLChanging(string value);
    partial void OnReminderBodyHTMLChanged();
    partial void OnReminderBodyPlainChanging(string value);
    partial void OnReminderBodyPlainChanged();
    partial void OnSorryBodyHTMLChanging(string value);
    partial void OnSorryBodyHTMLChanged();
    partial void OnSorryBodyPlainChanging(string value);
    partial void OnSorryBodyPlainChanged();
    partial void OnVODAvailableBodyHTMLChanging(string value);
    partial void OnVODAvailableBodyHTMLChanged();
    partial void OnVODAvailableBodyPlainChanging(string value);
    partial void OnVODAvailableBodyPlainChanged();
    partial void OnReminderDeliveryDateChanging(string value);
    partial void OnReminderDeliveryDateChanged();
    partial void OnSorryDeliveryDateChanging(string value);
    partial void OnSorryDeliveryDateChanged();
    partial void OnVODAvailableDeliveryDateChanging(string value);
    partial void OnVODAvailableDeliveryDateChanged();
    partial void OnEventRegPageURLChanging(string value);
    partial void OnEventRegPageURLChanged();
    partial void OnEventPlayerPageURLChanging(string value);
    partial void OnEventPlayerPageURLChanged();
    partial void OnEventLoginPageURLChanging(string value);
    partial void OnEventLoginPageURLChanged();
    partial void OnCalendarURLChanging(string value);
    partial void OnCalendarURLChanged();
    partial void OnEmailRegistrationFromChanging(string value);
    partial void OnEmailRegistrationFromChanged();
    partial void OnEmailRegistrationSubjectChanging(string value);
    partial void OnEmailRegistrationSubjectChanged();
    partial void OnEmailRegistrationSendStatusChanging(string value);
    partial void OnEmailRegistrationSendStatusChanged();
    partial void OnContactBodyHTMLChanging(string value);
    partial void OnContactBodyHTMLChanged();
    partial void OnContactBodyPlainChanging(string value);
    partial void OnContactBodyPlainChanged();
    partial void OnEmailContactSendStatusChanging(string value);
    partial void OnEmailContactSendStatusChanged();
    partial void OnEmailContactSubjectChanging(string value);
    partial void OnEmailContactSubjectChanged();
    partial void OnEmailContactFromChanging(string value);
    partial void OnEmailContactFromChanged();
    partial void OnContactThankYouPageChanging(string value);
    partial void OnContactThankYouPageChanged();
    partial void OnRegCookieCreateStatusChanging(string value);
    partial void OnRegCookieCreateStatusChanged();
    partial void OnEventQuestionRedirURLChanging(string value);
    partial void OnEventQuestionRedirURLChanged();
    partial void OnPollRedirURLChanging(string value);
    partial void OnPollRedirURLChanged();
    partial void OnEventSiteChanging(string value);
    partial void OnEventSiteChanged();
    partial void OnAssetFileNameChanging(string value);
    partial void OnAssetFileNameChanged();
    partial void OnAssetIDChanging(string value);
    partial void OnAssetIDChanged();
    partial void OnEventRedirectPageURLChanging(string value);
    partial void OnEventRedirectPageURLChanged();
    partial void OnEmailReminderSendStatusChanging(System.Nullable<int> value);
    partial void OnEmailReminderSendStatusChanged();
    partial void OnReminderSubjectChanging(string value);
    partial void OnReminderSubjectChanged();
    partial void OnEmailRemarketBodyHTMLChanging(string value);
    partial void OnEmailRemarketBodyHTMLChanged();
    partial void OnRemarketURLChanging(string value);
    partial void OnRemarketURLChanged();
    partial void OnEventThankYouRedirectURLChanging(string value);
    partial void OnEventThankYouRedirectURLChanged();
    partial void OnVODAvailableSubjectChanging(string value);
    partial void OnVODAvailableSubjectChanged();
    partial void OnSorrySubjectChanging(string value);
    partial void OnSorrySubjectChanged();
    partial void OnPasscodeChanging(string value);
    partial void OnPasscodeChanged();
    partial void OnEventMetadataChanging(string value);
    partial void OnEventMetadataChanged();
    partial void OnReferenceIDChanging(string value);
    partial void OnReferenceIDChanged();
    partial void OnEmbedCodeChanging(string value);
    partial void OnEmbedCodeChanged();
    #endregion
		
		public TableEvent()
		{
			this._TableEventStatus = default(EntityRef<TableEventStatus>);
			this._TableEventType = default(EntityRef<TableEventType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EventDescription
		{
			get
			{
				return this._EventDescription;
			}
			set
			{
				if ((this._EventDescription != value))
				{
					this.OnEventDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EventDescription = value;
					this.SendPropertyChanged("EventDescription");
					this.OnEventDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDuration", DbType="NVarChar(50)")]
		public string EventDuration
		{
			get
			{
				return this._EventDuration;
			}
			set
			{
				if ((this._EventDuration != value))
				{
					this.OnEventDurationChanging(value);
					this.SendPropertyChanging();
					this._EventDuration = value;
					this.SendPropertyChanged("EventDuration");
					this.OnEventDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventAsset", DbType="NVarChar(50)")]
		public string EventAsset
		{
			get
			{
				return this._EventAsset;
			}
			set
			{
				if ((this._EventAsset != value))
				{
					this.OnEventAssetChanging(value);
					this.SendPropertyChanging();
					this._EventAsset = value;
					this.SendPropertyChanged("EventAsset");
					this.OnEventAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="VarChar(50)")]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStatusID", DbType="NVarChar(5)")]
		public string EventStatusID
		{
			get
			{
				return this._EventStatusID;
			}
			set
			{
				if ((this._EventStatusID != value))
				{
					if (this._TableEventStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventStatusIDChanging(value);
					this.SendPropertyChanging();
					this._EventStatusID = value;
					this.SendPropertyChanged("EventStatusID");
					this.OnEventStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime EventDateCreated
		{
			get
			{
				return this._EventDateCreated;
			}
			set
			{
				if ((this._EventDateCreated != value))
				{
					this.OnEventDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._EventDateCreated = value;
					this.SendPropertyChanged("EventDateCreated");
					this.OnEventDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeID", DbType="NVarChar(5)")]
		public string EventTypeID
		{
			get
			{
				return this._EventTypeID;
			}
			set
			{
				if ((this._EventTypeID != value))
				{
					if (this._TableEventType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EventTypeID = value;
					this.SendPropertyChanged("EventTypeID");
					this.OnEventTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinID", DbType="NVarChar(50)")]
		public string SkinID
		{
			get
			{
				return this._SkinID;
			}
			set
			{
				if ((this._SkinID != value))
				{
					this.OnSkinIDChanging(value);
					this.SendPropertyChanging();
					this._SkinID = value;
					this.SendPropertyChanged("SkinID");
					this.OnSkinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NVarChar(50)")]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateModified", DbType="NVarChar(50)")]
		public string EventDateModified
		{
			get
			{
				return this._EventDateModified;
			}
			set
			{
				if ((this._EventDateModified != value))
				{
					this.OnEventDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._EventDateModified = value;
					this.SendPropertyChanged("EventDateModified");
					this.OnEventDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventReleaseDate", DbType="NVarChar(50)")]
		public string EventReleaseDate
		{
			get
			{
				return this._EventReleaseDate;
			}
			set
			{
				if ((this._EventReleaseDate != value))
				{
					this.OnEventReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._EventReleaseDate = value;
					this.SendPropertyChanged("EventReleaseDate");
					this.OnEventReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEOLDate", DbType="NVarChar(50)")]
		public string EventEOLDate
		{
			get
			{
				return this._EventEOLDate;
			}
			set
			{
				if ((this._EventEOLDate != value))
				{
					this.OnEventEOLDateChanging(value);
					this.SendPropertyChanging();
					this._EventEOLDate = value;
					this.SendPropertyChanged("EventEOLDate");
					this.OnEventEOLDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventPageURL", DbType="VarChar(MAX)")]
		public string EventPageURL
		{
			get
			{
				return this._EventPageURL;
			}
			set
			{
				if ((this._EventPageURL != value))
				{
					this.OnEventPageURLChanging(value);
					this.SendPropertyChanging();
					this._EventPageURL = value;
					this.SendPropertyChanged("EventPageURL");
					this.OnEventPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(50)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NVarChar(50)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStatus", DbType="VarChar(50)")]
		public string EventStatus
		{
			get
			{
				return this._EventStatus;
			}
			set
			{
				if ((this._EventStatus != value))
				{
					this.OnEventStatusChanging(value);
					this.SendPropertyChanging();
					this._EventStatus = value;
					this.SendPropertyChanged("EventStatus");
					this.OnEventStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationBodyHTML", DbType="VarChar(MAX)")]
		public string RegistrationBodyHTML
		{
			get
			{
				return this._RegistrationBodyHTML;
			}
			set
			{
				if ((this._RegistrationBodyHTML != value))
				{
					this.OnRegistrationBodyHTMLChanging(value);
					this.SendPropertyChanging();
					this._RegistrationBodyHTML = value;
					this.SendPropertyChanged("RegistrationBodyHTML");
					this.OnRegistrationBodyHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationBodyPlain", DbType="VarChar(MAX)")]
		public string RegistrationBodyPlain
		{
			get
			{
				return this._RegistrationBodyPlain;
			}
			set
			{
				if ((this._RegistrationBodyPlain != value))
				{
					this.OnRegistrationBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._RegistrationBodyPlain = value;
					this.SendPropertyChanged("RegistrationBodyPlain");
					this.OnRegistrationBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderBodyHTML", DbType="VarChar(MAX)")]
		public string ReminderBodyHTML
		{
			get
			{
				return this._ReminderBodyHTML;
			}
			set
			{
				if ((this._ReminderBodyHTML != value))
				{
					this.OnReminderBodyHTMLChanging(value);
					this.SendPropertyChanging();
					this._ReminderBodyHTML = value;
					this.SendPropertyChanged("ReminderBodyHTML");
					this.OnReminderBodyHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderBodyPlain", DbType="VarChar(MAX)")]
		public string ReminderBodyPlain
		{
			get
			{
				return this._ReminderBodyPlain;
			}
			set
			{
				if ((this._ReminderBodyPlain != value))
				{
					this.OnReminderBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._ReminderBodyPlain = value;
					this.SendPropertyChanged("ReminderBodyPlain");
					this.OnReminderBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SorryBodyHTML", DbType="VarChar(MAX)")]
		public string SorryBodyHTML
		{
			get
			{
				return this._SorryBodyHTML;
			}
			set
			{
				if ((this._SorryBodyHTML != value))
				{
					this.OnSorryBodyHTMLChanging(value);
					this.SendPropertyChanging();
					this._SorryBodyHTML = value;
					this.SendPropertyChanged("SorryBodyHTML");
					this.OnSorryBodyHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SorryBodyPlain", DbType="VarChar(MAX)")]
		public string SorryBodyPlain
		{
			get
			{
				return this._SorryBodyPlain;
			}
			set
			{
				if ((this._SorryBodyPlain != value))
				{
					this.OnSorryBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._SorryBodyPlain = value;
					this.SendPropertyChanged("SorryBodyPlain");
					this.OnSorryBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VODAvailableBodyHTML", DbType="VarChar(MAX)")]
		public string VODAvailableBodyHTML
		{
			get
			{
				return this._VODAvailableBodyHTML;
			}
			set
			{
				if ((this._VODAvailableBodyHTML != value))
				{
					this.OnVODAvailableBodyHTMLChanging(value);
					this.SendPropertyChanging();
					this._VODAvailableBodyHTML = value;
					this.SendPropertyChanged("VODAvailableBodyHTML");
					this.OnVODAvailableBodyHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VODAvailableBodyPlain", DbType="VarChar(MAX)")]
		public string VODAvailableBodyPlain
		{
			get
			{
				return this._VODAvailableBodyPlain;
			}
			set
			{
				if ((this._VODAvailableBodyPlain != value))
				{
					this.OnVODAvailableBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._VODAvailableBodyPlain = value;
					this.SendPropertyChanged("VODAvailableBodyPlain");
					this.OnVODAvailableBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderDeliveryDate", DbType="VarChar(50)")]
		public string ReminderDeliveryDate
		{
			get
			{
				return this._ReminderDeliveryDate;
			}
			set
			{
				if ((this._ReminderDeliveryDate != value))
				{
					this.OnReminderDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._ReminderDeliveryDate = value;
					this.SendPropertyChanged("ReminderDeliveryDate");
					this.OnReminderDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SorryDeliveryDate", DbType="VarChar(50)")]
		public string SorryDeliveryDate
		{
			get
			{
				return this._SorryDeliveryDate;
			}
			set
			{
				if ((this._SorryDeliveryDate != value))
				{
					this.OnSorryDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._SorryDeliveryDate = value;
					this.SendPropertyChanged("SorryDeliveryDate");
					this.OnSorryDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VODAvailableDeliveryDate", DbType="VarChar(50)")]
		public string VODAvailableDeliveryDate
		{
			get
			{
				return this._VODAvailableDeliveryDate;
			}
			set
			{
				if ((this._VODAvailableDeliveryDate != value))
				{
					this.OnVODAvailableDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._VODAvailableDeliveryDate = value;
					this.SendPropertyChanged("VODAvailableDeliveryDate");
					this.OnVODAvailableDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventRegPageURL", DbType="VarChar(500)")]
		public string EventRegPageURL
		{
			get
			{
				return this._EventRegPageURL;
			}
			set
			{
				if ((this._EventRegPageURL != value))
				{
					this.OnEventRegPageURLChanging(value);
					this.SendPropertyChanging();
					this._EventRegPageURL = value;
					this.SendPropertyChanged("EventRegPageURL");
					this.OnEventRegPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventPlayerPageURL", DbType="VarChar(500)")]
		public string EventPlayerPageURL
		{
			get
			{
				return this._EventPlayerPageURL;
			}
			set
			{
				if ((this._EventPlayerPageURL != value))
				{
					this.OnEventPlayerPageURLChanging(value);
					this.SendPropertyChanging();
					this._EventPlayerPageURL = value;
					this.SendPropertyChanged("EventPlayerPageURL");
					this.OnEventPlayerPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLoginPageURL", DbType="VarChar(500)")]
		public string EventLoginPageURL
		{
			get
			{
				return this._EventLoginPageURL;
			}
			set
			{
				if ((this._EventLoginPageURL != value))
				{
					this.OnEventLoginPageURLChanging(value);
					this.SendPropertyChanging();
					this._EventLoginPageURL = value;
					this.SendPropertyChanged("EventLoginPageURL");
					this.OnEventLoginPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarURL", DbType="VarChar(500)")]
		public string CalendarURL
		{
			get
			{
				return this._CalendarURL;
			}
			set
			{
				if ((this._CalendarURL != value))
				{
					this.OnCalendarURLChanging(value);
					this.SendPropertyChanging();
					this._CalendarURL = value;
					this.SendPropertyChanged("CalendarURL");
					this.OnCalendarURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailRegistrationFrom", DbType="VarChar(500)")]
		public string EmailRegistrationFrom
		{
			get
			{
				return this._EmailRegistrationFrom;
			}
			set
			{
				if ((this._EmailRegistrationFrom != value))
				{
					this.OnEmailRegistrationFromChanging(value);
					this.SendPropertyChanging();
					this._EmailRegistrationFrom = value;
					this.SendPropertyChanged("EmailRegistrationFrom");
					this.OnEmailRegistrationFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailRegistrationSubject", DbType="VarChar(100)")]
		public string EmailRegistrationSubject
		{
			get
			{
				return this._EmailRegistrationSubject;
			}
			set
			{
				if ((this._EmailRegistrationSubject != value))
				{
					this.OnEmailRegistrationSubjectChanging(value);
					this.SendPropertyChanging();
					this._EmailRegistrationSubject = value;
					this.SendPropertyChanged("EmailRegistrationSubject");
					this.OnEmailRegistrationSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailRegistrationSendStatus", DbType="VarChar(50)")]
		public string EmailRegistrationSendStatus
		{
			get
			{
				return this._EmailRegistrationSendStatus;
			}
			set
			{
				if ((this._EmailRegistrationSendStatus != value))
				{
					this.OnEmailRegistrationSendStatusChanging(value);
					this.SendPropertyChanging();
					this._EmailRegistrationSendStatus = value;
					this.SendPropertyChanged("EmailRegistrationSendStatus");
					this.OnEmailRegistrationSendStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactBodyHTML", DbType="VarChar(MAX)")]
		public string ContactBodyHTML
		{
			get
			{
				return this._ContactBodyHTML;
			}
			set
			{
				if ((this._ContactBodyHTML != value))
				{
					this.OnContactBodyHTMLChanging(value);
					this.SendPropertyChanging();
					this._ContactBodyHTML = value;
					this.SendPropertyChanged("ContactBodyHTML");
					this.OnContactBodyHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactBodyPlain", DbType="VarChar(MAX)")]
		public string ContactBodyPlain
		{
			get
			{
				return this._ContactBodyPlain;
			}
			set
			{
				if ((this._ContactBodyPlain != value))
				{
					this.OnContactBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._ContactBodyPlain = value;
					this.SendPropertyChanged("ContactBodyPlain");
					this.OnContactBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailContactSendStatus", DbType="VarChar(MAX)")]
		public string EmailContactSendStatus
		{
			get
			{
				return this._EmailContactSendStatus;
			}
			set
			{
				if ((this._EmailContactSendStatus != value))
				{
					this.OnEmailContactSendStatusChanging(value);
					this.SendPropertyChanging();
					this._EmailContactSendStatus = value;
					this.SendPropertyChanged("EmailContactSendStatus");
					this.OnEmailContactSendStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailContactSubject", DbType="VarChar(MAX)")]
		public string EmailContactSubject
		{
			get
			{
				return this._EmailContactSubject;
			}
			set
			{
				if ((this._EmailContactSubject != value))
				{
					this.OnEmailContactSubjectChanging(value);
					this.SendPropertyChanging();
					this._EmailContactSubject = value;
					this.SendPropertyChanged("EmailContactSubject");
					this.OnEmailContactSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailContactFrom", DbType="VarChar(MAX)")]
		public string EmailContactFrom
		{
			get
			{
				return this._EmailContactFrom;
			}
			set
			{
				if ((this._EmailContactFrom != value))
				{
					this.OnEmailContactFromChanging(value);
					this.SendPropertyChanging();
					this._EmailContactFrom = value;
					this.SendPropertyChanged("EmailContactFrom");
					this.OnEmailContactFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactThankYouPage", DbType="VarChar(MAX)")]
		public string ContactThankYouPage
		{
			get
			{
				return this._ContactThankYouPage;
			}
			set
			{
				if ((this._ContactThankYouPage != value))
				{
					this.OnContactThankYouPageChanging(value);
					this.SendPropertyChanging();
					this._ContactThankYouPage = value;
					this.SendPropertyChanged("ContactThankYouPage");
					this.OnContactThankYouPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegCookieCreateStatus", DbType="VarChar(50)")]
		public string RegCookieCreateStatus
		{
			get
			{
				return this._RegCookieCreateStatus;
			}
			set
			{
				if ((this._RegCookieCreateStatus != value))
				{
					this.OnRegCookieCreateStatusChanging(value);
					this.SendPropertyChanging();
					this._RegCookieCreateStatus = value;
					this.SendPropertyChanged("RegCookieCreateStatus");
					this.OnRegCookieCreateStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventQuestionRedirURL", DbType="VarChar(MAX)")]
		public string EventQuestionRedirURL
		{
			get
			{
				return this._EventQuestionRedirURL;
			}
			set
			{
				if ((this._EventQuestionRedirURL != value))
				{
					this.OnEventQuestionRedirURLChanging(value);
					this.SendPropertyChanging();
					this._EventQuestionRedirURL = value;
					this.SendPropertyChanged("EventQuestionRedirURL");
					this.OnEventQuestionRedirURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollRedirURL", DbType="VarChar(MAX)")]
		public string PollRedirURL
		{
			get
			{
				return this._PollRedirURL;
			}
			set
			{
				if ((this._PollRedirURL != value))
				{
					this.OnPollRedirURLChanging(value);
					this.SendPropertyChanging();
					this._PollRedirURL = value;
					this.SendPropertyChanged("PollRedirURL");
					this.OnPollRedirURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSite", DbType="VarChar(MAX)")]
		public string EventSite
		{
			get
			{
				return this._EventSite;
			}
			set
			{
				if ((this._EventSite != value))
				{
					this.OnEventSiteChanging(value);
					this.SendPropertyChanging();
					this._EventSite = value;
					this.SendPropertyChanged("EventSite");
					this.OnEventSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetFileName", DbType="VarChar(200)")]
		public string AssetFileName
		{
			get
			{
				return this._AssetFileName;
			}
			set
			{
				if ((this._AssetFileName != value))
				{
					this.OnAssetFileNameChanging(value);
					this.SendPropertyChanging();
					this._AssetFileName = value;
					this.SendPropertyChanged("AssetFileName");
					this.OnAssetFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="NVarChar(50)")]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventRedirectPageURL", DbType="VarChar(200)")]
		public string EventRedirectPageURL
		{
			get
			{
				return this._EventRedirectPageURL;
			}
			set
			{
				if ((this._EventRedirectPageURL != value))
				{
					this.OnEventRedirectPageURLChanging(value);
					this.SendPropertyChanging();
					this._EventRedirectPageURL = value;
					this.SendPropertyChanged("EventRedirectPageURL");
					this.OnEventRedirectPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailReminderSendStatus", DbType="Int")]
		public System.Nullable<int> EmailReminderSendStatus
		{
			get
			{
				return this._EmailReminderSendStatus;
			}
			set
			{
				if ((this._EmailReminderSendStatus != value))
				{
					this.OnEmailReminderSendStatusChanging(value);
					this.SendPropertyChanging();
					this._EmailReminderSendStatus = value;
					this.SendPropertyChanged("EmailReminderSendStatus");
					this.OnEmailReminderSendStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderSubject", DbType="VarChar(MAX)")]
		public string ReminderSubject
		{
			get
			{
				return this._ReminderSubject;
			}
			set
			{
				if ((this._ReminderSubject != value))
				{
					this.OnReminderSubjectChanging(value);
					this.SendPropertyChanging();
					this._ReminderSubject = value;
					this.SendPropertyChanged("ReminderSubject");
					this.OnReminderSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailRemarketBodyHTML", DbType="VarChar(MAX)")]
		public string EmailRemarketBodyHTML
		{
			get
			{
				return this._EmailRemarketBodyHTML;
			}
			set
			{
				if ((this._EmailRemarketBodyHTML != value))
				{
					this.OnEmailRemarketBodyHTMLChanging(value);
					this.SendPropertyChanging();
					this._EmailRemarketBodyHTML = value;
					this.SendPropertyChanged("EmailRemarketBodyHTML");
					this.OnEmailRemarketBodyHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarketURL", DbType="VarChar(MAX)")]
		public string RemarketURL
		{
			get
			{
				return this._RemarketURL;
			}
			set
			{
				if ((this._RemarketURL != value))
				{
					this.OnRemarketURLChanging(value);
					this.SendPropertyChanging();
					this._RemarketURL = value;
					this.SendPropertyChanged("RemarketURL");
					this.OnRemarketURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventThankYouRedirectURL", DbType="VarChar(MAX)")]
		public string EventThankYouRedirectURL
		{
			get
			{
				return this._EventThankYouRedirectURL;
			}
			set
			{
				if ((this._EventThankYouRedirectURL != value))
				{
					this.OnEventThankYouRedirectURLChanging(value);
					this.SendPropertyChanging();
					this._EventThankYouRedirectURL = value;
					this.SendPropertyChanged("EventThankYouRedirectURL");
					this.OnEventThankYouRedirectURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VODAvailableSubject", DbType="VarChar(MAX)")]
		public string VODAvailableSubject
		{
			get
			{
				return this._VODAvailableSubject;
			}
			set
			{
				if ((this._VODAvailableSubject != value))
				{
					this.OnVODAvailableSubjectChanging(value);
					this.SendPropertyChanging();
					this._VODAvailableSubject = value;
					this.SendPropertyChanged("VODAvailableSubject");
					this.OnVODAvailableSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SorrySubject", DbType="VarChar(MAX)")]
		public string SorrySubject
		{
			get
			{
				return this._SorrySubject;
			}
			set
			{
				if ((this._SorrySubject != value))
				{
					this.OnSorrySubjectChanging(value);
					this.SendPropertyChanging();
					this._SorrySubject = value;
					this.SendPropertyChanged("SorrySubject");
					this.OnSorrySubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passcode", DbType="VarChar(200)")]
		public string Passcode
		{
			get
			{
				return this._Passcode;
			}
			set
			{
				if ((this._Passcode != value))
				{
					this.OnPasscodeChanging(value);
					this.SendPropertyChanging();
					this._Passcode = value;
					this.SendPropertyChanged("Passcode");
					this.OnPasscodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventMetadata", DbType="VarChar(MAX)")]
		public string EventMetadata
		{
			get
			{
				return this._EventMetadata;
			}
			set
			{
				if ((this._EventMetadata != value))
				{
					this.OnEventMetadataChanging(value);
					this.SendPropertyChanging();
					this._EventMetadata = value;
					this.SendPropertyChanged("EventMetadata");
					this.OnEventMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="VarChar(50)")]
		public string ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmbedCode", DbType="VarChar(MAX)")]
		public string EmbedCode
		{
			get
			{
				return this._EmbedCode;
			}
			set
			{
				if ((this._EmbedCode != value))
				{
					this.OnEmbedCodeChanging(value);
					this.SendPropertyChanging();
					this._EmbedCode = value;
					this.SendPropertyChanged("EmbedCode");
					this.OnEmbedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableEventStatus_TableEvent", Storage="_TableEventStatus", ThisKey="EventStatusID", OtherKey="EventStatusID", IsForeignKey=true)]
		public TableEventStatus TableEventStatus
		{
			get
			{
				return this._TableEventStatus.Entity;
			}
			set
			{
				TableEventStatus previousValue = this._TableEventStatus.Entity;
				if (((previousValue != value) 
							|| (this._TableEventStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableEventStatus.Entity = null;
						previousValue.TableEvents.Remove(this);
					}
					this._TableEventStatus.Entity = value;
					if ((value != null))
					{
						value.TableEvents.Add(this);
						this._EventStatusID = value.EventStatusID;
					}
					else
					{
						this._EventStatusID = default(string);
					}
					this.SendPropertyChanged("TableEventStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableEventType_TableEvent", Storage="_TableEventType", ThisKey="EventTypeID", OtherKey="EventTypeID", IsForeignKey=true)]
		public TableEventType TableEventType
		{
			get
			{
				return this._TableEventType.Entity;
			}
			set
			{
				TableEventType previousValue = this._TableEventType.Entity;
				if (((previousValue != value) 
							|| (this._TableEventType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableEventType.Entity = null;
						previousValue.TableEvents.Remove(this);
					}
					this._TableEventType.Entity = value;
					if ((value != null))
					{
						value.TableEvents.Add(this);
						this._EventTypeID = value.EventTypeID;
					}
					else
					{
						this._EventTypeID = default(string);
					}
					this.SendPropertyChanged("TableEventType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableEventStatus")]
	public partial class TableEventStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventStatusID;
		
		private string _EventStatusName;
		
		private EntitySet<TableEvent> _TableEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventStatusIDChanging(string value);
    partial void OnEventStatusIDChanged();
    partial void OnEventStatusNameChanging(string value);
    partial void OnEventStatusNameChanged();
    #endregion
		
		public TableEventStatus()
		{
			this._TableEvents = new EntitySet<TableEvent>(new Action<TableEvent>(this.attach_TableEvents), new Action<TableEvent>(this.detach_TableEvents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStatusID", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventStatusID
		{
			get
			{
				return this._EventStatusID;
			}
			set
			{
				if ((this._EventStatusID != value))
				{
					this.OnEventStatusIDChanging(value);
					this.SendPropertyChanging();
					this._EventStatusID = value;
					this.SendPropertyChanged("EventStatusID");
					this.OnEventStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EventStatusName
		{
			get
			{
				return this._EventStatusName;
			}
			set
			{
				if ((this._EventStatusName != value))
				{
					this.OnEventStatusNameChanging(value);
					this.SendPropertyChanging();
					this._EventStatusName = value;
					this.SendPropertyChanged("EventStatusName");
					this.OnEventStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableEventStatus_TableEvent", Storage="_TableEvents", ThisKey="EventStatusID", OtherKey="EventStatusID")]
		public EntitySet<TableEvent> TableEvents
		{
			get
			{
				return this._TableEvents;
			}
			set
			{
				this._TableEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableEvents(TableEvent entity)
		{
			this.SendPropertyChanging();
			entity.TableEventStatus = this;
		}
		
		private void detach_TableEvents(TableEvent entity)
		{
			this.SendPropertyChanging();
			entity.TableEventStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableEventType")]
	public partial class TableEventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventTypeID;
		
		private string _EventTypeName;
		
		private EntitySet<TableEvent> _TableEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventTypeIDChanging(string value);
    partial void OnEventTypeIDChanged();
    partial void OnEventTypeNameChanging(string value);
    partial void OnEventTypeNameChanged();
    #endregion
		
		public TableEventType()
		{
			this._TableEvents = new EntitySet<TableEvent>(new Action<TableEvent>(this.attach_TableEvents), new Action<TableEvent>(this.detach_TableEvents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeID", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventTypeID
		{
			get
			{
				return this._EventTypeID;
			}
			set
			{
				if ((this._EventTypeID != value))
				{
					this.OnEventTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EventTypeID = value;
					this.SendPropertyChanged("EventTypeID");
					this.OnEventTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EventTypeName
		{
			get
			{
				return this._EventTypeName;
			}
			set
			{
				if ((this._EventTypeName != value))
				{
					this.OnEventTypeNameChanging(value);
					this.SendPropertyChanging();
					this._EventTypeName = value;
					this.SendPropertyChanged("EventTypeName");
					this.OnEventTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableEventType_TableEvent", Storage="_TableEvents", ThisKey="EventTypeID", OtherKey="EventTypeID")]
		public EntitySet<TableEvent> TableEvents
		{
			get
			{
				return this._TableEvents;
			}
			set
			{
				this._TableEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableEvents(TableEvent entity)
		{
			this.SendPropertyChanging();
			entity.TableEventType = this;
		}
		
		private void detach_TableEvents(TableEvent entity)
		{
			this.SendPropertyChanging();
			entity.TableEventType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableGroups")]
	public partial class TableGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _EventID;
		
		private string _UserID;
		
		private string _GroupID;
		
		private string _GroupName;
		
		private EntityRef<TableCustomer> _TableCustomer;
		
		private EntityRef<TableUser> _TableUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public TableGroup()
		{
			this._TableCustomer = default(EntityRef<TableCustomer>);
			this._TableUser = default(EntityRef<TableUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._TableCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._TableUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCustomer_TableGroup", Storage="_TableCustomer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public TableCustomer TableCustomer
		{
			get
			{
				return this._TableCustomer.Entity;
			}
			set
			{
				TableCustomer previousValue = this._TableCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TableCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableCustomer.Entity = null;
						previousValue.TableGroups.Remove(this);
					}
					this._TableCustomer.Entity = value;
					if ((value != null))
					{
						value.TableGroups.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("TableCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableUser_TableGroup", Storage="_TableUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public TableUser TableUser
		{
			get
			{
				return this._TableUser.Entity;
			}
			set
			{
				TableUser previousValue = this._TableUser.Entity;
				if (((previousValue != value) 
							|| (this._TableUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableUser.Entity = null;
						previousValue.TableGroups.Remove(this);
					}
					this._TableUser.Entity = value;
					if ((value != null))
					{
						value.TableGroups.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("TableUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableLiveStreams")]
	public partial class TableLiveStream : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerID;
		
		private string _EventID;
		
		private string _SourceURL;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _StreamAssetID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnSourceURLChanging(string value);
    partial void OnSourceURLChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnStreamAssetIDChanging(string value);
    partial void OnStreamAssetIDChanged();
    #endregion
		
		public TableLiveStream()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="VarChar(50)")]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceURL", DbType="VarChar(MAX)")]
		public string SourceURL
		{
			get
			{
				return this._SourceURL;
			}
			set
			{
				if ((this._SourceURL != value))
				{
					this.OnSourceURLChanging(value);
					this.SendPropertyChanging();
					this._SourceURL = value;
					this.SendPropertyChanged("SourceURL");
					this.OnSourceURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreamAssetID", DbType="VarChar(50)")]
		public string StreamAssetID
		{
			get
			{
				return this._StreamAssetID;
			}
			set
			{
				if ((this._StreamAssetID != value))
				{
					this.OnStreamAssetIDChanging(value);
					this.SendPropertyChanging();
					this._StreamAssetID = value;
					this.SendPropertyChanged("StreamAssetID");
					this.OnStreamAssetIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TablePolls")]
	public partial class TablePoll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _PollID;
		
		private string _EventID;
		
		private string _PollQuestion;
		
		private string _PollAnswer;
		
		private System.DateTime _PollDateCreated;
		
		private string _ResellerID;
		
		private string _PollQuestion01;
		
		private string _PollAnswer01;
		
		private string _PollQuestion02;
		
		private string _PollAnswer02;
		
		private string _PollQuestion03;
		
		private string _PollAnswer03;
		
		private string _PollQuestion04;
		
		private string _PollAnswer04;
		
		private string _PollQuestion05;
		
		private string _PollAnswer05;
		
		private string _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnPollIDChanging(string value);
    partial void OnPollIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnPollQuestionChanging(string value);
    partial void OnPollQuestionChanged();
    partial void OnPollAnswerChanging(string value);
    partial void OnPollAnswerChanged();
    partial void OnPollDateCreatedChanging(System.DateTime value);
    partial void OnPollDateCreatedChanged();
    partial void OnResellerIDChanging(string value);
    partial void OnResellerIDChanged();
    partial void OnPollQuestion01Changing(string value);
    partial void OnPollQuestion01Changed();
    partial void OnPollAnswer01Changing(string value);
    partial void OnPollAnswer01Changed();
    partial void OnPollQuestion02Changing(string value);
    partial void OnPollQuestion02Changed();
    partial void OnPollAnswer02Changing(string value);
    partial void OnPollAnswer02Changed();
    partial void OnPollQuestion03Changing(string value);
    partial void OnPollQuestion03Changed();
    partial void OnPollAnswer03Changing(string value);
    partial void OnPollAnswer03Changed();
    partial void OnPollQuestion04Changing(string value);
    partial void OnPollQuestion04Changed();
    partial void OnPollAnswer04Changing(string value);
    partial void OnPollAnswer04Changed();
    partial void OnPollQuestion05Changing(string value);
    partial void OnPollQuestion05Changed();
    partial void OnPollAnswer05Changing(string value);
    partial void OnPollAnswer05Changed();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    #endregion
		
		public TablePoll()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollQuestion", DbType="VarChar(MAX)")]
		public string PollQuestion
		{
			get
			{
				return this._PollQuestion;
			}
			set
			{
				if ((this._PollQuestion != value))
				{
					this.OnPollQuestionChanging(value);
					this.SendPropertyChanging();
					this._PollQuestion = value;
					this.SendPropertyChanged("PollQuestion");
					this.OnPollQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswer", DbType="VarChar(MAX)")]
		public string PollAnswer
		{
			get
			{
				return this._PollAnswer;
			}
			set
			{
				if ((this._PollAnswer != value))
				{
					this.OnPollAnswerChanging(value);
					this.SendPropertyChanging();
					this._PollAnswer = value;
					this.SendPropertyChanged("PollAnswer");
					this.OnPollAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollDateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime PollDateCreated
		{
			get
			{
				return this._PollDateCreated;
			}
			set
			{
				if ((this._PollDateCreated != value))
				{
					this.OnPollDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._PollDateCreated = value;
					this.SendPropertyChanged("PollDateCreated");
					this.OnPollDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="VarChar(MAX)")]
		public string ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollQuestion01", DbType="VarChar(MAX)")]
		public string PollQuestion01
		{
			get
			{
				return this._PollQuestion01;
			}
			set
			{
				if ((this._PollQuestion01 != value))
				{
					this.OnPollQuestion01Changing(value);
					this.SendPropertyChanging();
					this._PollQuestion01 = value;
					this.SendPropertyChanged("PollQuestion01");
					this.OnPollQuestion01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswer01", DbType="VarChar(MAX)")]
		public string PollAnswer01
		{
			get
			{
				return this._PollAnswer01;
			}
			set
			{
				if ((this._PollAnswer01 != value))
				{
					this.OnPollAnswer01Changing(value);
					this.SendPropertyChanging();
					this._PollAnswer01 = value;
					this.SendPropertyChanged("PollAnswer01");
					this.OnPollAnswer01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollQuestion02", DbType="VarChar(MAX)")]
		public string PollQuestion02
		{
			get
			{
				return this._PollQuestion02;
			}
			set
			{
				if ((this._PollQuestion02 != value))
				{
					this.OnPollQuestion02Changing(value);
					this.SendPropertyChanging();
					this._PollQuestion02 = value;
					this.SendPropertyChanged("PollQuestion02");
					this.OnPollQuestion02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswer02", DbType="VarChar(MAX)")]
		public string PollAnswer02
		{
			get
			{
				return this._PollAnswer02;
			}
			set
			{
				if ((this._PollAnswer02 != value))
				{
					this.OnPollAnswer02Changing(value);
					this.SendPropertyChanging();
					this._PollAnswer02 = value;
					this.SendPropertyChanged("PollAnswer02");
					this.OnPollAnswer02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollQuestion03", DbType="VarChar(MAX)")]
		public string PollQuestion03
		{
			get
			{
				return this._PollQuestion03;
			}
			set
			{
				if ((this._PollQuestion03 != value))
				{
					this.OnPollQuestion03Changing(value);
					this.SendPropertyChanging();
					this._PollQuestion03 = value;
					this.SendPropertyChanged("PollQuestion03");
					this.OnPollQuestion03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswer03", DbType="VarChar(MAX)")]
		public string PollAnswer03
		{
			get
			{
				return this._PollAnswer03;
			}
			set
			{
				if ((this._PollAnswer03 != value))
				{
					this.OnPollAnswer03Changing(value);
					this.SendPropertyChanging();
					this._PollAnswer03 = value;
					this.SendPropertyChanged("PollAnswer03");
					this.OnPollAnswer03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollQuestion04", DbType="VarChar(MAX)")]
		public string PollQuestion04
		{
			get
			{
				return this._PollQuestion04;
			}
			set
			{
				if ((this._PollQuestion04 != value))
				{
					this.OnPollQuestion04Changing(value);
					this.SendPropertyChanging();
					this._PollQuestion04 = value;
					this.SendPropertyChanged("PollQuestion04");
					this.OnPollQuestion04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswer04", DbType="VarChar(MAX)")]
		public string PollAnswer04
		{
			get
			{
				return this._PollAnswer04;
			}
			set
			{
				if ((this._PollAnswer04 != value))
				{
					this.OnPollAnswer04Changing(value);
					this.SendPropertyChanging();
					this._PollAnswer04 = value;
					this.SendPropertyChanged("PollAnswer04");
					this.OnPollAnswer04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollQuestion05", DbType="VarChar(MAX)")]
		public string PollQuestion05
		{
			get
			{
				return this._PollQuestion05;
			}
			set
			{
				if ((this._PollQuestion05 != value))
				{
					this.OnPollQuestion05Changing(value);
					this.SendPropertyChanging();
					this._PollQuestion05 = value;
					this.SendPropertyChanged("PollQuestion05");
					this.OnPollQuestion05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollAnswer05", DbType="VarChar(MAX)")]
		public string PollAnswer05
		{
			get
			{
				return this._PollAnswer05;
			}
			set
			{
				if ((this._PollAnswer05 != value))
				{
					this.OnPollAnswer05Changing(value);
					this.SendPropertyChanging();
					this._PollAnswer05 = value;
					this.SendPropertyChanged("PollAnswer05");
					this.OnPollAnswer05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TablePortals")]
	public partial class TablePortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerID;
		
		private string _PortalDomain;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _PortalID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnPortalDomainChanging(string value);
    partial void OnPortalDomainChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnPortalIDChanging(string value);
    partial void OnPortalIDChanged();
    #endregion
		
		public TablePortal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDomain", DbType="VarChar(MAX)")]
		public string PortalDomain
		{
			get
			{
				return this._PortalDomain;
			}
			set
			{
				if ((this._PortalDomain != value))
				{
					this.OnPortalDomainChanging(value);
					this.SendPropertyChanging();
					this._PortalDomain = value;
					this.SendPropertyChanged("PortalDomain");
					this.OnPortalDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="VarChar(50)")]
		public string PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableProfiles")]
	public partial class TableProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProfileID;
		
		private string _ProfileName;
		
		private System.Nullable<System.DateTime> _ProfileCreatedDate;
		
		private System.Nullable<System.DateTime> _ProfileModifiedDate;
		
		private EntitySet<TableUser> _TableUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(string value);
    partial void OnProfileIDChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnProfileCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProfileCreatedDateChanged();
    partial void OnProfileModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProfileModifiedDateChanged();
    #endregion
		
		public TableProfile()
		{
			this._TableUsers = new EntitySet<TableUser>(new Action<TableUser>(this.attach_TableUsers), new Action<TableUser>(this.detach_TableUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProfileCreatedDate
		{
			get
			{
				return this._ProfileCreatedDate;
			}
			set
			{
				if ((this._ProfileCreatedDate != value))
				{
					this.OnProfileCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._ProfileCreatedDate = value;
					this.SendPropertyChanged("ProfileCreatedDate");
					this.OnProfileCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProfileModifiedDate
		{
			get
			{
				return this._ProfileModifiedDate;
			}
			set
			{
				if ((this._ProfileModifiedDate != value))
				{
					this.OnProfileModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ProfileModifiedDate = value;
					this.SendPropertyChanged("ProfileModifiedDate");
					this.OnProfileModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableProfile_TableUser", Storage="_TableUsers", ThisKey="ProfileID", OtherKey="ProfileID")]
		public EntitySet<TableUser> TableUsers
		{
			get
			{
				return this._TableUsers;
			}
			set
			{
				this._TableUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableUsers(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableProfile = this;
		}
		
		private void detach_TableUsers(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableQuestions")]
	public partial class TableQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _QuestionID;
		
		private string _EventID;
		
		private string _QuestionTitle;
		
		private string _QuestionAnswer;
		
		private System.Nullable<System.DateTime> _QuestionDateCreated;
		
		private string _UserID;
		
		private string _AssetID;
		
		private string _UserFName;
		
		private string _UserLName;
		
		private string _UserEmail;
		
		private string _TimePosition;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _QuestionStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnQuestionIDChanging(string value);
    partial void OnQuestionIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnQuestionTitleChanging(string value);
    partial void OnQuestionTitleChanged();
    partial void OnQuestionAnswerChanging(string value);
    partial void OnQuestionAnswerChanged();
    partial void OnQuestionDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnQuestionDateCreatedChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnAssetIDChanging(string value);
    partial void OnAssetIDChanged();
    partial void OnUserFNameChanging(string value);
    partial void OnUserFNameChanged();
    partial void OnUserLNameChanging(string value);
    partial void OnUserLNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnTimePositionChanging(string value);
    partial void OnTimePositionChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnQuestionStatusChanging(string value);
    partial void OnQuestionStatusChanged();
    #endregion
		
		public TableQuestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitle", DbType="VarChar(MAX)")]
		public string QuestionTitle
		{
			get
			{
				return this._QuestionTitle;
			}
			set
			{
				if ((this._QuestionTitle != value))
				{
					this.OnQuestionTitleChanging(value);
					this.SendPropertyChanging();
					this._QuestionTitle = value;
					this.SendPropertyChanged("QuestionTitle");
					this.OnQuestionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionAnswer", DbType="VarChar(MAX)")]
		public string QuestionAnswer
		{
			get
			{
				return this._QuestionAnswer;
			}
			set
			{
				if ((this._QuestionAnswer != value))
				{
					this.OnQuestionAnswerChanging(value);
					this.SendPropertyChanging();
					this._QuestionAnswer = value;
					this.SendPropertyChanged("QuestionAnswer");
					this.OnQuestionAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuestionDateCreated
		{
			get
			{
				return this._QuestionDateCreated;
			}
			set
			{
				if ((this._QuestionDateCreated != value))
				{
					this.OnQuestionDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._QuestionDateCreated = value;
					this.SendPropertyChanged("QuestionDateCreated");
					this.OnQuestionDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="VarChar(50)")]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFName", DbType="VarChar(50)")]
		public string UserFName
		{
			get
			{
				return this._UserFName;
			}
			set
			{
				if ((this._UserFName != value))
				{
					this.OnUserFNameChanging(value);
					this.SendPropertyChanging();
					this._UserFName = value;
					this.SendPropertyChanged("UserFName");
					this.OnUserFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLName", DbType="VarChar(50)")]
		public string UserLName
		{
			get
			{
				return this._UserLName;
			}
			set
			{
				if ((this._UserLName != value))
				{
					this.OnUserLNameChanging(value);
					this.SendPropertyChanging();
					this._UserLName = value;
					this.SendPropertyChanged("UserLName");
					this.OnUserLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(100)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimePosition", DbType="VarChar(50)")]
		public string TimePosition
		{
			get
			{
				return this._TimePosition;
			}
			set
			{
				if ((this._TimePosition != value))
				{
					this.OnTimePositionChanging(value);
					this.SendPropertyChanging();
					this._TimePosition = value;
					this.SendPropertyChanged("TimePosition");
					this.OnTimePositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionStatus", DbType="VarChar(50)")]
		public string QuestionStatus
		{
			get
			{
				return this._QuestionStatus;
			}
			set
			{
				if ((this._QuestionStatus != value))
				{
					this.OnQuestionStatusChanging(value);
					this.SendPropertyChanging();
					this._QuestionStatus = value;
					this.SendPropertyChanged("QuestionStatus");
					this.OnQuestionStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableRoles")]
	public partial class TableRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SecurityRoleID;
		
		private string _SecurityRoleName;
		
		private EntitySet<TableUser> _TableUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityRoleIDChanging(string value);
    partial void OnSecurityRoleIDChanged();
    partial void OnSecurityRoleNameChanging(string value);
    partial void OnSecurityRoleNameChanged();
    #endregion
		
		public TableRole()
		{
			this._TableUsers = new EntitySet<TableUser>(new Action<TableUser>(this.attach_TableUsers), new Action<TableUser>(this.detach_TableUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SecurityRoleID
		{
			get
			{
				return this._SecurityRoleID;
			}
			set
			{
				if ((this._SecurityRoleID != value))
				{
					this.OnSecurityRoleIDChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleID = value;
					this.SendPropertyChanged("SecurityRoleID");
					this.OnSecurityRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SecurityRoleName
		{
			get
			{
				return this._SecurityRoleName;
			}
			set
			{
				if ((this._SecurityRoleName != value))
				{
					this.OnSecurityRoleNameChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleName = value;
					this.SendPropertyChanged("SecurityRoleName");
					this.OnSecurityRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableRole_TableUser", Storage="_TableUsers", ThisKey="SecurityRoleID", OtherKey="SecurityRoleID")]
		public EntitySet<TableUser> TableUsers
		{
			get
			{
				return this._TableUsers;
			}
			set
			{
				this._TableUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableUsers(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableRole = this;
		}
		
		private void detach_TableUsers(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableSkins")]
	public partial class TableSkin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SkinID;
		
		private string _SkinName;
		
		private string _SkinURL;
		
		private string _CustomerID;
		
		private string _BonusPointsRequired;
		
		private System.Nullable<System.DateTime> _SkinCreatedDate;
		
		private System.Nullable<System.DateTime> _SkinModifiedDate;
		
		private EntitySet<TableUser> _TableUsers;
		
		private EntitySet<TableUser> _TableUsers1;
		
		private EntityRef<TableCustomer> _TableCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinIDChanging(string value);
    partial void OnSkinIDChanged();
    partial void OnSkinNameChanging(string value);
    partial void OnSkinNameChanged();
    partial void OnSkinURLChanging(string value);
    partial void OnSkinURLChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnBonusPointsRequiredChanging(string value);
    partial void OnBonusPointsRequiredChanged();
    partial void OnSkinCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSkinCreatedDateChanged();
    partial void OnSkinModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSkinModifiedDateChanged();
    #endregion
		
		public TableSkin()
		{
			this._TableUsers = new EntitySet<TableUser>(new Action<TableUser>(this.attach_TableUsers), new Action<TableUser>(this.detach_TableUsers));
			this._TableUsers1 = new EntitySet<TableUser>(new Action<TableUser>(this.attach_TableUsers1), new Action<TableUser>(this.detach_TableUsers1));
			this._TableCustomer = default(EntityRef<TableCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SkinID
		{
			get
			{
				return this._SkinID;
			}
			set
			{
				if ((this._SkinID != value))
				{
					this.OnSkinIDChanging(value);
					this.SendPropertyChanging();
					this._SkinID = value;
					this.SendPropertyChanged("SkinID");
					this.OnSkinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SkinName
		{
			get
			{
				return this._SkinName;
			}
			set
			{
				if ((this._SkinName != value))
				{
					this.OnSkinNameChanging(value);
					this.SendPropertyChanging();
					this._SkinName = value;
					this.SendPropertyChanged("SkinName");
					this.OnSkinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinURL", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SkinURL
		{
			get
			{
				return this._SkinURL;
			}
			set
			{
				if ((this._SkinURL != value))
				{
					this.OnSkinURLChanging(value);
					this.SendPropertyChanging();
					this._SkinURL = value;
					this.SendPropertyChanged("SkinURL");
					this.OnSkinURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._TableCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusPointsRequired", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BonusPointsRequired
		{
			get
			{
				return this._BonusPointsRequired;
			}
			set
			{
				if ((this._BonusPointsRequired != value))
				{
					this.OnBonusPointsRequiredChanging(value);
					this.SendPropertyChanging();
					this._BonusPointsRequired = value;
					this.SendPropertyChanged("BonusPointsRequired");
					this.OnBonusPointsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SkinCreatedDate
		{
			get
			{
				return this._SkinCreatedDate;
			}
			set
			{
				if ((this._SkinCreatedDate != value))
				{
					this.OnSkinCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._SkinCreatedDate = value;
					this.SendPropertyChanged("SkinCreatedDate");
					this.OnSkinCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SkinModifiedDate
		{
			get
			{
				return this._SkinModifiedDate;
			}
			set
			{
				if ((this._SkinModifiedDate != value))
				{
					this.OnSkinModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._SkinModifiedDate = value;
					this.SendPropertyChanged("SkinModifiedDate");
					this.OnSkinModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableSkin_TableUser", Storage="_TableUsers", ThisKey="SkinID", OtherKey="SkinID")]
		public EntitySet<TableUser> TableUsers
		{
			get
			{
				return this._TableUsers;
			}
			set
			{
				this._TableUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableSkin_TableUser1", Storage="_TableUsers1", ThisKey="SkinID", OtherKey="SkinID")]
		public EntitySet<TableUser> TableUsers1
		{
			get
			{
				return this._TableUsers1;
			}
			set
			{
				this._TableUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCustomer_TableSkin", Storage="_TableCustomer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public TableCustomer TableCustomer
		{
			get
			{
				return this._TableCustomer.Entity;
			}
			set
			{
				TableCustomer previousValue = this._TableCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TableCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableCustomer.Entity = null;
						previousValue.TableSkins.Remove(this);
					}
					this._TableCustomer.Entity = value;
					if ((value != null))
					{
						value.TableSkins.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("TableCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TableUsers(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableSkin = this;
		}
		
		private void detach_TableUsers(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableSkin = null;
		}
		
		private void attach_TableUsers1(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableSkin1 = this;
		}
		
		private void detach_TableUsers1(TableUser entity)
		{
			this.SendPropertyChanging();
			entity.TableSkin1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableSyncEvents")]
	public partial class TableSyncEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _SyncType;
		
		private string _TimePosition;
		
		private string _TimeDuration;
		
		private string _AssetID;
		
		private string _EventID;
		
		private string _CustomerID;
		
		private string _EventTime;
		
		private string _AssetURL;
		
		private string _ParentAssetID;
		
		private string _AssetName;
		
		private string _AssetDescription;
		
		private string _SyncID;
		
		private string _AssetStatus;
		
		private string _AssetOrder;
		
		private string _AssetThumbnail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnSyncTypeChanging(string value);
    partial void OnSyncTypeChanged();
    partial void OnTimePositionChanging(string value);
    partial void OnTimePositionChanged();
    partial void OnTimeDurationChanging(string value);
    partial void OnTimeDurationChanged();
    partial void OnAssetIDChanging(string value);
    partial void OnAssetIDChanged();
    partial void OnEventIDChanging(string value);
    partial void OnEventIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnEventTimeChanging(string value);
    partial void OnEventTimeChanged();
    partial void OnAssetURLChanging(string value);
    partial void OnAssetURLChanged();
    partial void OnParentAssetIDChanging(string value);
    partial void OnParentAssetIDChanged();
    partial void OnAssetNameChanging(string value);
    partial void OnAssetNameChanged();
    partial void OnAssetDescriptionChanging(string value);
    partial void OnAssetDescriptionChanged();
    partial void OnSyncIDChanging(string value);
    partial void OnSyncIDChanged();
    partial void OnAssetStatusChanging(string value);
    partial void OnAssetStatusChanged();
    partial void OnAssetOrderChanging(string value);
    partial void OnAssetOrderChanged();
    partial void OnAssetThumbnailChanging(string value);
    partial void OnAssetThumbnailChanged();
    #endregion
		
		public TableSyncEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncType", DbType="VarChar(50)")]
		public string SyncType
		{
			get
			{
				return this._SyncType;
			}
			set
			{
				if ((this._SyncType != value))
				{
					this.OnSyncTypeChanging(value);
					this.SendPropertyChanging();
					this._SyncType = value;
					this.SendPropertyChanged("SyncType");
					this.OnSyncTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimePosition", DbType="VarChar(50)")]
		public string TimePosition
		{
			get
			{
				return this._TimePosition;
			}
			set
			{
				if ((this._TimePosition != value))
				{
					this.OnTimePositionChanging(value);
					this.SendPropertyChanging();
					this._TimePosition = value;
					this.SendPropertyChanged("TimePosition");
					this.OnTimePositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="VarChar(50)")]
		public string TimeDuration
		{
			get
			{
				return this._TimeDuration;
			}
			set
			{
				if ((this._TimeDuration != value))
				{
					this.OnTimeDurationChanging(value);
					this.SendPropertyChanging();
					this._TimeDuration = value;
					this.SendPropertyChanged("TimeDuration");
					this.OnTimeDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="VarChar(50)")]
		public string AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="VarChar(50)")]
		public string EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetURL", DbType="VarChar(MAX)")]
		public string AssetURL
		{
			get
			{
				return this._AssetURL;
			}
			set
			{
				if ((this._AssetURL != value))
				{
					this.OnAssetURLChanging(value);
					this.SendPropertyChanging();
					this._AssetURL = value;
					this.SendPropertyChanged("AssetURL");
					this.OnAssetURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentAssetID", DbType="VarChar(50)")]
		public string ParentAssetID
		{
			get
			{
				return this._ParentAssetID;
			}
			set
			{
				if ((this._ParentAssetID != value))
				{
					this.OnParentAssetIDChanging(value);
					this.SendPropertyChanging();
					this._ParentAssetID = value;
					this.SendPropertyChanged("ParentAssetID");
					this.OnParentAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetName", DbType="VarChar(100)")]
		public string AssetName
		{
			get
			{
				return this._AssetName;
			}
			set
			{
				if ((this._AssetName != value))
				{
					this.OnAssetNameChanging(value);
					this.SendPropertyChanging();
					this._AssetName = value;
					this.SendPropertyChanged("AssetName");
					this.OnAssetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDescription", DbType="VarChar(100)")]
		public string AssetDescription
		{
			get
			{
				return this._AssetDescription;
			}
			set
			{
				if ((this._AssetDescription != value))
				{
					this.OnAssetDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AssetDescription = value;
					this.SendPropertyChanged("AssetDescription");
					this.OnAssetDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncID", DbType="VarChar(50)")]
		public string SyncID
		{
			get
			{
				return this._SyncID;
			}
			set
			{
				if ((this._SyncID != value))
				{
					this.OnSyncIDChanging(value);
					this.SendPropertyChanging();
					this._SyncID = value;
					this.SendPropertyChanged("SyncID");
					this.OnSyncIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetStatus", DbType="VarChar(50)")]
		public string AssetStatus
		{
			get
			{
				return this._AssetStatus;
			}
			set
			{
				if ((this._AssetStatus != value))
				{
					this.OnAssetStatusChanging(value);
					this.SendPropertyChanging();
					this._AssetStatus = value;
					this.SendPropertyChanged("AssetStatus");
					this.OnAssetStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetOrder", DbType="VarChar(50)")]
		public string AssetOrder
		{
			get
			{
				return this._AssetOrder;
			}
			set
			{
				if ((this._AssetOrder != value))
				{
					this.OnAssetOrderChanging(value);
					this.SendPropertyChanging();
					this._AssetOrder = value;
					this.SendPropertyChanged("AssetOrder");
					this.OnAssetOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetThumbnail", DbType="VarChar(MAX)")]
		public string AssetThumbnail
		{
			get
			{
				return this._AssetThumbnail;
			}
			set
			{
				if ((this._AssetThumbnail != value))
				{
					this.OnAssetThumbnailChanging(value);
					this.SendPropertyChanging();
					this._AssetThumbnail = value;
					this.SendPropertyChanged("AssetThumbnail");
					this.OnAssetThumbnailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
